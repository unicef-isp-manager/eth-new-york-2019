{
  "contractName": "DonationsManager",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "_owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "donations",
      "outputs": [
        {
          "name": "donor",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        },
        {
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "name": "countryName",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "countries",
      "outputs": [
        {
          "name": "currentISP",
          "type": "address"
        },
        {
          "name": "balance",
          "type": "uint256"
        },
        {
          "name": "monthlyServiceCost",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "isp",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "countryName",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "name": "monthlyServiceCost",
          "type": "uint256"
        }
      ],
      "name": "UpdatedISP",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "countryName",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "donor",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "DonationAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "countryName",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "ISP",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawalISP",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "ChainlinkRequested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "ChainlinkFulfilled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "ChainlinkCancelled",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "isp",
          "type": "address"
        },
        {
          "name": "country",
          "type": "bytes32"
        },
        {
          "name": "serviceCost",
          "type": "uint256"
        }
      ],
      "name": "updateISP",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "nameofCountry",
          "type": "bytes32"
        }
      ],
      "name": "addDonation",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "countryName",
          "type": "bytes32"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_oracle",
          "type": "address"
        },
        {
          "name": "_jobId",
          "type": "string"
        }
      ],
      "name": "requestEthereumPrice",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_requestId",
          "type": "bytes32"
        },
        {
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "fulfill",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"bytes32\"},{\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"fulfill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"countryName\",\"type\":\"bytes32\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"nameofCountry\",\"type\":\"bytes32\"}],\"name\":\"addDonation\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_oracle\",\"type\":\"address\"},{\"name\":\"_jobId\",\"type\":\"string\"}],\"name\":\"requestEthereumPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"donations\",\"outputs\":[{\"name\":\"donor\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"timestamp\",\"type\":\"uint256\"},{\"name\":\"countryName\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"isp\",\"type\":\"address\"},{\"name\":\"country\",\"type\":\"bytes32\"},{\"name\":\"serviceCost\",\"type\":\"uint256\"}],\"name\":\"updateISP\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"countries\",\"outputs\":[{\"name\":\"currentISP\",\"type\":\"address\"},{\"name\":\"balance\",\"type\":\"uint256\"},{\"name\":\"monthlyServiceCost\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"isp\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"countryName\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"monthlyServiceCost\",\"type\":\"uint256\"}],\"name\":\"UpdatedISP\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"countryName\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"donor\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"DonationAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"countryName\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"ISP\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawalISP\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"ChainlinkRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"ChainlinkFulfilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"ChainlinkCancelled\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"_newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/saga/Documents/ETH New York/eth-new-york-2019/chainlink/contracts/DonationsManager.sol\":\"DonationsManager\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/saga/Documents/ETH New York/eth-new-york-2019/chainlink/contracts/DonationsManager.sol\":{\"keccak256\":\"0x6066e763be18879d3240739d6a857bae13c3313132145e18c75dcf3677bd60fb\",\"urls\":[\"bzzr://7d44509da19a02fcf53e141dbf94042c2711a64a12c3498da5b27fa0c78c5e3a\"]},\"@ensdomains/buffer/contracts/Buffer.sol\":{\"keccak256\":\"0x1264adbd06f6e05b04539bb225063a988b7fa90343d068de60cdde6cfb6fa92d\",\"urls\":[\"bzzr://8f1cb39e242b73bb7fac1f48bf0380ccccad14f06aae9cf4f87329cc78186122\"]},\"chainlink/contracts/Chainlink.sol\":{\"keccak256\":\"0xb4025da009238c87783f1b6c93a1349cfd472c326a72db9b741cea1b8e63341d\",\"urls\":[\"bzzr://9f9baf01775beaa7f8b38326a0d229c16f14a2d72dc431cee27a27e0f9a2933c\"]},\"chainlink/contracts/ChainlinkClient.sol\":{\"keccak256\":\"0xafa32ade3a9ac9895ed7446bcf965c38a89d4b0a8c710997cb94691bdccef281\",\"urls\":[\"bzzr://2132f5b3488a94e79948484c61eec1571862784f30625d10dcb8bc46177f9674\"]},\"chainlink/contracts/ENSResolver.sol\":{\"keccak256\":\"0x08965df63f00cb8d164d6fc36a0c388740725906b0bfb79b17391d5dfeabf683\",\"urls\":[\"bzzr://0700cb12e032ed8ed8327e446dfd805ae9fa28785a2909a73def511fe374b8cd\"]},\"chainlink/contracts/interfaces/ChainlinkRequestInterface.sol\":{\"keccak256\":\"0xd8aad4b502fd09cc1084f587eb4c707015fa1f8bdd7ad94eb570d8f9119883e4\",\"urls\":[\"bzzr://98d93046072cf8f44dcd23cf5af979931994535b0db741b6ef2381aceaa991e4\"]},\"chainlink/contracts/interfaces/ENSInterface.sol\":{\"keccak256\":\"0xbe30be08ec79a31ea2659594dbeed92f54ecadaa08d9c36e10a619643666113c\",\"urls\":[\"bzzr://0d4ebb805c2ad34f6943030dfe3e57c70a17e33756ad2be22d816a34a468a685\"]},\"chainlink/contracts/interfaces/LinkTokenInterface.sol\":{\"keccak256\":\"0xe0feabb30a9326800bc42669f641f349d11653548cab0088df506254f146f95c\",\"urls\":[\"bzzr://d5ef0e0e6347c187c1f79f482f7c14e897929f4bcb6db06d96bec2005de48c57\"]},\"chainlink/contracts/interfaces/PointerInterface.sol\":{\"keccak256\":\"0x604ba06cf6c032443f87fd4e91f130c4c7707fdceedb0e5e9d2c525c29a8fdbf\",\"urls\":[\"bzzr://029dc129811b5f0baa68278647879d648ff6293e2e9ed396f3f2190b55f7c51b\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xa1c5e1d9ebbf654d332ca8e7a5c04a6a6a9d142eeaab3b988c2c909c81a62bef\",\"urls\":[\"bzzr://d062fb4a1b6de1f036ee0e73364a2532c4757eb68e95dd8c5cbb2d17b8732c6a\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x84c7090c27cf3657b73d9e26b6b316975fa0bd233b8169f254de0c3b3acfaefc\",\"urls\":[\"bzzr://b983355647976c1daa5de581a1b6a41be9c5adc17cce257b8679649db78f8a11\"]},\"solidity-cborutils/contracts/CBOR.sol\":{\"keccak256\":\"0x9f47b2ee2a7f5d83611f1fdf35b7336fe2a3277825e7c9a9463205584dbaf84f\",\"urls\":[\"bzzr://049fe9b102ae7958387a2f5194270d6477830bdc81d5d204f8a285963de7a3b5\"]}},\"version\":1}",
  "bytecode": "0x608060405260016004553480156200001657600080fd5b5033600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000b2620000b8640100000000026401000000009004565b620001cd565b6200018773c89bd4e1632d3a43cb03aaad5262cbe4038bc57173ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156200013557600080fd5b505af11580156200014a573d6000803e3d6000fd5b505050506040513d60208110156200016157600080fd5b810190808051906020019092919050505062000189640100000000026401000000009004565b565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61202880620001dd6000396000f3006080604052600436106100af576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634357855e146100b4578063715018a6146100ef5780638da5cb5b146101065780638e19899e1461015d578063a72959e21461018e578063ab643c10146101bf578063b2bdfa7b14610248578063cc6cb19a1461029f578063f2fde38b1461033f578063fae865a514610382578063fe1a5670146103dd575b600080fd5b3480156100c057600080fd5b506100ed60048036038101908080356000191690602001909291908035906020019092919050505061045c565b005b3480156100fb57600080fd5b506101046105dc565b005b34801561011257600080fd5b5061011b61074a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561016957600080fd5b5061018c6004803603810190808035600019169060200190929190505050610770565b005b34801561019a57600080fd5b506101bd6004803603810190808035600019169060200190929190505050610b59565b005b3480156101cb57600080fd5b50610246600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610d39565b005b34801561025457600080fd5b5061025d610fca565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102ab57600080fd5b506102e0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ff0565b604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848152602001838152602001826000191660001916815260200194505050505060405180910390f35b34801561034b57600080fd5b50610380600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611040565b005b34801561038e57600080fd5b506103db600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560001916906020019092919080359060200190929190505050611111565b005b3480156103e957600080fd5b5061040c60048036038101908080356000191690602001909291905050506112a4565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390f35b8160056000826000191660001916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610561576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001807f536f75726365206d75737420626520746865206f7261636c65206f662074686581526020017f207265717565737400000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b60056000826000191660001916815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905580600019167f7cc135e0cebb02c3480ae5d74d377283180a2601f8f644edf7987b009316c63a60405160405180910390a281600881905550505050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156106a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6e6f7420746865206f776e65720000000000000000000000000000000000000081525060200191505060405180910390fd5b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a26000600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b803373ffffffffffffffffffffffffffffffffffffffff1660096000836000191660001916815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610852576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f6e6f74207468652049535020666f72207468697320636f756e7472790000000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff1660096000846000191660001916815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610933576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f6e6f74207468652049535020666f72207468697320636f756e7472790000000081525060200191505060405180910390fd5b600960008360001916600019168152602001908152602001600020600201546009600084600019166000191681526020019081526020016000206001015410151515610a0d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001807f6e6f7420656e6f7567682066756e64696e6720666f7220636f766572206d6f6e81526020017f74686c7920636f7374000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b60096000836000191660001916815260200190815260200160002060020154600960008460001916600019168152602001908152602001600020600101600082825403925050819055503373ffffffffffffffffffffffffffffffffffffffff166108fc600960008560001916600019168152602001908152602001600020600201549081150290604051600060405180830381858888f19350505050158015610abb573d6000803e3d6000fd5b507fbcd90c4359544168249236f71b55a51acdb7fcaa115dcc13513c6ecdaac6541c8233600960008660001916600019168152602001908152602001600020600201546040518084600019166000191681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a15050565b33600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555080600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301816000191690555042600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055507fd8ad61f2a0747b0f283c8a708ff2f3a276239cc4cea9a86145cac30980b8e141813334426040518085600019166000191681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390a150565b610d41611f5a565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610e06576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6e6f7420746865206f776e65720000000000000000000000000000000000000081525060200191505060405180910390fd5b610e3c610e12836112ee565b30634357855e7c010000000000000000000000000000000000000000000000000000000002611319565b9050610ee46040805190810160405280600381526020017f75726c0000000000000000000000000000000000000000000000000000000000815250606060405190810160405280603f81526020017f68747470733a2f2f6d696e2d6170692e63727970746f636f6d706172652e636f81526020017f6d2f646174612f70726963653f6673796d3d455448267473796d733d555344008152508361134a9092919063ffffffff16565b610f636040805190810160405280600481526020017f70617468000000000000000000000000000000000000000000000000000000008152506040805190810160405280600381526020017f55534400000000000000000000000000000000000000000000000000000000008152508361134a9092919063ffffffff16565b610fae6040805190810160405280600581526020017f74696d657300000000000000000000000000000000000000000000000000000081525060648361137d9092919063ffffffff16565b610fc48382670de0b6b3a76400006001026113b0565b50505050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a6020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154905084565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611105576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6e6f7420746865206f776e65720000000000000000000000000000000000000081525060200191505060405180910390fd5b61110e8161173c565b50565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156111d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6e6f7420746865206f776e65720000000000000000000000000000000000000081525060200191505060405180910390fd5b8260096000846000191660001916815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600960008460001916600019168152602001908152602001600020600201819055508082600019168473ffffffffffffffffffffffffffffffffffffffff167f70998ff735809161ac38d546214e42b3ff43c761d6ebd5f1935d519daa0548ff60405160405180910390a4505050565b60096020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154905083565b6000606082905060008151141561130b5760006001029150611313565b602083015191505b50919050565b611321611f5a565b611329611f5a565b61134085858584611838909392919063ffffffff16565b9150509392505050565b6113618284608001516118f290919063ffffffff16565b6113788184608001516118f290919063ffffffff16565b505050565b6113948284608001516118f290919063ffffffff16565b6113ab81846080015161191790919063ffffffff16565b505050565b600030600454604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401828152602001925050506040516020818303038152906040526040518082805190602001908083835b60208310151561144c5780518252602082019150602081019050602083039250611427565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902090506004548360600181815250508360056000836000191660001916815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600019167fb5e6e01e79f91267dc17b4e6314d5d4d03593d2ceee0fbb452b750bd70ea5af960405160405180910390a2600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634000aea0858461155b87611965565b6040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156115fe5780820151818401526020810190506115e3565b50505050905090810190601f16801561162b5780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b15801561164c57600080fd5b505af1158015611660573d6000803e3d6000fd5b505050506040513d602081101561167657600080fd5b81019080805190602001909291905050501515611721576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f756e61626c6520746f207472616e73666572416e6443616c6c20746f206f726181526020017f636c65000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b60016004600082825401925050819055508090509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561177857600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b611840611f5a565b6118508560800151610100611b90565b50838560000190600019169081600019168152505082856020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508185604001907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681525050849050949350505050565b6118ff8260038351611bea565b6119128183611d4890919063ffffffff16565b505050565b6000811215156119325761192d82600083611bea565b611961565b611960826001837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03611bea565b5b5050565b6060600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634042994690507c01000000000000000000000000000000000000000000000000000000000260008084600001518560200151866040015187606001516001896080015160000151604051602401808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200188815260200187600019166000191681526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001857bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611af3578082015181840152602081019050611ad8565b50505050905090810190601f168015611b205780820380516001836020036101000a031916815260200191505b509950505050505050505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050919050565b611b98611fc8565b6000602083811515611ba657fe5b06141515611bc357602082811515611bba57fe5b06602003820191505b81836020018181525050604051808452600081528281016020016040525082905092915050565b601781111515611c1c57611c168160058460ff169060020a0260ff161784611d6a90919063ffffffff16565b50611d43565b60ff81111515611c6357611c46601860058460ff169060020a021784611d6a90919063ffffffff16565b50611c5d81600185611d8a9092919063ffffffff16565b50611d42565b61ffff81111515611cab57611c8e601960058460ff169060020a021784611d6a90919063ffffffff16565b50611ca581600285611d8a9092919063ffffffff16565b50611d41565b63ffffffff81111515611cf557611cd8601a60058460ff169060020a021784611d6a90919063ffffffff16565b50611cef81600485611d8a9092919063ffffffff16565b50611d40565b67ffffffffffffffff81111515611d3f57611d26601b60058460ff169060020a021784611d6a90919063ffffffff16565b50611d3d81600885611d8a9092919063ffffffff16565b505b5b5b5b5b505050565b611d50611fc8565b611d6283846000015151848551611dac565b905092915050565b611d72611fc8565b611d828384600001515184611e69565b905092915050565b611d92611fc8565b611da3848560000151518585611eb9565b90509392505050565b611db4611fc8565b600080600085518511151515611dc957600080fd5b87602001518588011115611df457611df3886002611ded8b602001518b8a01611f1a565b02611f36565b5b875180518860208301019450808988011115611e105788870182525b60208801935050505b602085101515611e3e5781518352602083019250602082019150602085039450611e19565b6001856020036101000a03905080198251168184511681811785525050879350505050949350505050565b611e71611fc8565b836020015183101515611e9057611e8f846002866020015102611f36565b5b8351805160208583010184815381861415611eac576001820183525b5050508390509392505050565b611ec1611fc8565b600085602001518584011115611ee157611ee086600287860102611f36565b5b6001836101000a0390508551838682010185831982511617815281518588011115611f0c5784870182525b505085915050949350505050565b600081831115611f2c57829050611f30565b8190505b92915050565b606082600001519050611f498383611b90565b50611f548382611d48565b50505050565b60c06040519081016040528060008019168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200160008152602001611fc2611fe2565b81525090565b604080519081016040528060608152602001600081525090565b6040805190810160405280606081526020016000815250905600a165627a7a7230582054cf8a7c7b2441a7a45e81b3d705baa1f9d2d58d38df03bc6680dae822807b510029",
  "deployedBytecode": "",
  "sourceMap": "34359:3192:0:-;;;1157:1:6;1130:28;;35390:93:0;8:9:-1;5:2;;;30:1;27;20:12;5:2;35390:93:0;575:10:24;567:5;;:18;;;;;;;;;;;;;;;;;;35430:10:0;35421:6;;:19;;;;;;;;;;;;;;;;;;35450:25;:23;;;:25;;;:::i;:::-;34359:3192;;5004:123:6;5054:68;949:42;5072:47;;;:49;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5072:49:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5072:49:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5072:49:6;;;;;;;;;;;;;;;;5054:17;;;:68;;;:::i;:::-;5004:123::o;4787:94::-;4870:5;4844:4;;:32;;;;;;;;;;;;;;;;;;4787:94;:::o;34359:3192:0:-;;;;;;;",
  "deployedSourceMap": "34359:3192:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;37070:199;;8:9:-1;5:2;;;30:1;27;20:12;5:2;37070:199:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:111:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1001:111:24;;;;;;238:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:24;;;;;;;;;;;;;;;;;;;;;;;;;;;36087:562:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;36087:562:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35747:335;;8:9:-1;5:2;;;30:1;27;20:12;5:2;35747:335:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36657:409;;8:9:-1;5:2;;;30:1;27;20:12;5:2;36657:409:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34769:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;34769:21:0;;;;;;;;;;;;;;;;;;;;;;;;;;;35097:46;;8:9:-1;5:2;;;30:1;27;20:12;5:2;35097:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1274:103:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1274:103:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;35493:249:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;35493:249:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34927:45;;8:9:-1;5:2;;;30:1;27;20:12;5:2;34927:45:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;37070:199;37174:10;8655:15:6;:27;8671:10;8655:27;;;;;;;;;;;;;;;;;;;;;;;;;;;8641:41;;:10;:41;;;8633:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8740:15;:27;8756:10;8740:27;;;;;;;;;;;;;;;;;;8733:34;;;;;;;;;;;8797:10;8778:30;;;;;;;;;;;;;37209:6:0;37194:12;:21;;;;37070:199;;;:::o;1001:111:24:-;35346:6:0;;;;;;;;;;;35332:20;;:10;:20;;;35324:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1077:5:24;;;;;;;;;;;1058:25;;;;;;;;;;;;1105:1;1089:5;;:18;;;;;;;;;;;;;;;;;;1001:111::o;238:20::-;;;;;;;;;;;;;:::o;36087:562:0:-;36139:11;35227:10;35197:40;;:9;:15;35207:4;35197:15;;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;:40;;;35189:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36207:10;36170:47;;:9;:22;36180:11;36170:22;;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;:47;;;36162:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36302:9;:22;36312:11;36302:22;;;;;;;;;;;;;;;;;:41;;;36268:9;:22;36278:11;36268:22;;;;;;;;;;;;;;;;;:30;;;:75;;36260:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36433:9;:22;36443:11;36433:22;;;;;;;;;;;;;;;;;:41;;;36399:9;:22;36409:11;36399:22;;;;;;;;;;;;;;;;;:30;;;:75;;;;;;;;;;;36484:10;:19;;:62;36504:9;:22;36514:11;36504:22;;;;;;;;;;;;;;;;;:41;;;36484:62;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;36484:62:0;36561:81;36575:11;36588:10;36600:9;:22;36610:11;36600:22;;;;;;;;;;;;;;;;;:41;;;36561:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36087:562;;:::o;35747:335::-;35838:10;35808:9;:21;35818:10;35808:21;;;;;;;;;;;;;;;:27;;;:40;;;;;;;;;;;;;;;;;;35889:9;35858;:21;35868:10;35858:21;;;;;;;;;;;;;;;:28;;:40;;;;35944:13;35908:9;:21;35918:10;35908:21;;;;;;;;;;;;;;;:33;;:49;;;;;;;36001:3;35967:9;:21;35977:10;35967:21;;;;;;;;;;;;;;;:31;;:37;;;;36019:56;36033:13;36048:10;36060:9;36071:3;36019:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35747:335;:::o;36657:409::-;36752:28;;:::i;:::-;35346:6;;;;;;;;;;;35332:20;;:10;:20;;;35324:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36783:75;36805:23;36821:6;36805:15;:23::i;:::-;36830:4;36836:21;;;36783;:75::i;:::-;36752:106;;36872:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:3;:7;;:81;;;;;:::i;:::-;36959:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:3;:7;;:22;;;;;:::i;:::-;36987:24;;;;;;;;;;;;;;;;;;;37007:3;36987;:10;;:24;;;;;:::i;:::-;37017:44;37040:7;37049:3;615:6:6;37054:1:0;:6;37017:22;:44::i;:::-;;36657:409;;;:::o;34769:21::-;;;;;;;;;;;;;:::o;35097:46::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1274:103:24:-;35346:6:0;;;;;;;;;;;35332:20;;:10;:20;;;35324:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1343:29:24;1362:9;1343:18;:29::i;:::-;1274:103;:::o;35493:249:0:-;35346:6;;;;;;;;;;;35332:20;;:10;:20;;;35324:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35619:3;35587:9;:18;35597:7;35587:18;;;;;;;;;;;;;;;;;:29;;;:35;;;;;;;;;;;;;;;;;;35672:11;35632:9;:18;35642:7;35632:18;;;;;;;;;;;;;;;;;:37;;:51;;;;35723:11;35714:7;35698:37;;;35709:3;35698:37;;;;;;;;;;;;35493:249;;;:::o;34927:45::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;37275:272::-;37344:14;37366:32;37407:6;37366:48;;37454:1;37424:19;:26;:31;37420:62;;;37472:3;37465:10;;;;;;37420:62;37533:2;37525:6;37521:15;37515:22;37505:32;;37497:46;;;;;:::o;1761:295:6:-;1909:17;;:::i;:::-;1941:28;;:::i;:::-;1982:69;1997:7;2006:16;2024:26;1982:3;:14;;:69;;;;;;:::i;:::-;1975:76;;1761:295;;;;;;:::o;1774:155:5:-;1862:27;1884:4;1862;:8;;;:21;;:27;;;;:::i;:::-;1895:29;1917:6;1895:4;:8;;;:21;;:29;;;;:::i;:::-;1774:155;;;:::o;2499:::-;2590:27;2612:4;2590;:8;;;:21;;:27;;;;:::i;:::-;2623:26;2642:6;2623:4;:8;;;:18;;:26;;;;:::i;:::-;2499:155;;;:::o;3037:476:6:-;3161:17;3227:4;3233:8;;3210:32;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3210:32:6;;;3200:43;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3200:43:6;;;;;;;;;;;;;;;;3188:55;;3262:8;;3249:4;:10;;:21;;;;;3305:7;3276:15;:26;3292:9;3276:26;;;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;3342:9;3323:29;;;;;;;;;;;;;3366:4;;;;;;;;;;;:20;;;3387:7;3396:8;3406:19;3420:4;3406:13;:19::i;:::-;3366:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3366:60:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3366:60:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3366:60:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3366:60:6;;;;;;;;;;;;;;;;3358:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3484:1;3472:8;;:13;;;;;;;;;;;3499:9;3492:16;;3037:476;;;;;:::o;1512:171:24:-;1603:1;1582:23;;:9;:23;;;;1574:32;;;;;;;;1645:9;1617:38;;1638:5;;;;;;;;;;;1617:38;;;;;;;;;;;;1669:9;1661:5;;:17;;;;;;;;;;;;;;;;;;1512:171;:::o;818:356:5:-;967:17;;:::i;:::-;999:40;1011:4;:8;;;257:3;999:11;:40::i;:::-;;1055:3;1045:4;:7;;:13;;;;;;;;;;;;;1087:16;1064:4;:20;;:39;;;;;;;;;;;1135:17;1109:4;:23;;:43;;;;;;;;;;;;;1165:4;1158:11;;818:356;;;;;;:::o;1930:182:25:-;2016:55;2027:3;328:1;2057:5;2051:19;2016:10;:55::i;:::-;2081:24;2098:5;2081:3;:10;;:24;;;;:::i;:::-;;1930:182;;:::o;1494:259::-;1586:1;1577:5;:10;;1574:173;;;1603:44;1614:3;173:1;1640:5;1603:10;:44::i;:::-;1574:173;;;1678:58;1689:3;229:1;1729:5;1724:2;:10;1678;:58::i;:::-;1574:173;1494:259;;:::o;7477:527:6:-;7565:5;7624:6;;;;;;;;;;;:20;;;:29;;;;716:3;668:1;7874:4;:7;;;7889:4;:20;;;7917:4;:23;;;7948:4;:10;;;763:1;7986:4;:8;;;:12;;;7594:405;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;7594:405:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;7594:405:6;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;7594:405:6;7587:412;;7477:527;;;:::o;978:455:4:-;1048:6;;:::i;:::-;1094:1;1088:2;1077:8;:13;;;;;;;;:18;;1073:81;;;1140:2;1129:8;:13;;;;;;;;1123:2;:20;1111:32;;;;1073:81;1224:8;1209:3;:12;;:23;;;;;1282:4;1276:11;1312:3;1307;1300:16;1341:1;1336:3;1329:14;1386:8;1381:3;1377:18;1373:2;1369:27;1363:4;1356:41;1251:156;1423:3;1416:10;;978:455;;;;:::o;488:715:25:-;594:2;585:5;:11;;582:615;;;612:44;649:5;644:1;635:5;:10;;;;;;634:20;;;612:3;:15;;:44;;;;:::i;:::-;;582:615;;;685:4;676:5;:13;;673:524;;;705:41;742:2;737:1;728:5;:10;;;;;;727:17;705:3;:15;;:41;;;;:::i;:::-;;760:23;774:5;781:1;760:3;:13;;:23;;;;;:::i;:::-;;673:524;;;812:6;803:5;:15;;800:397;;;834:41;871:2;866:1;857:5;:10;;;;;;856:17;834:3;:15;;:41;;;;:::i;:::-;;889:23;903:5;910:1;889:3;:13;;:23;;;;;:::i;:::-;;800:397;;;941:10;932:5;:19;;929:268;;;967:41;1004:2;999:1;990:5;:10;;;;;;989:17;967:3;:15;;:41;;;;:::i;:::-;;1022:23;1036:5;1043:1;1022:3;:13;;:23;;;;;:::i;:::-;;929:268;;;1074:18;1065:5;:27;;1062:135;;;1108:41;1145:2;1140:1;1131:5;:10;;;;;;1130:17;1108:3;:15;;:41;;;;:::i;:::-;;1163:23;1177:5;1184:1;1163:3;:13;;:23;;;;;:::i;:::-;;1062:135;929:268;800:397;673:524;582:615;488:715;;;:::o;4946:161:4:-;5023:6;;:::i;:::-;5055:45;5061:3;5066;:7;;;:14;5082:4;5088;:11;5055:5;:45::i;:::-;5048:52;;4946:161;;;;:::o;6397:150::-;6471:6;;:::i;:::-;6503:37;6514:3;6519;:7;;;:14;6535:4;6503:10;:37::i;:::-;6496:44;;6397:150;;;;:::o;10397:160::-;10478:6;;:::i;:::-;10510:40;10519:3;10524;:7;;;:14;10540:4;10546:3;10510:8;:40::i;:::-;10503:47;;10397:160;;;;;:::o;2875:1326::-;2970:6;;:::i;:::-;3143:9;3162:8;3958:9;3010:4;:11;3003:3;:18;;2995:27;;;;;;;;3049:3;:12;;;3043:3;3037;:9;:24;3033:100;;;3077:45;3084:3;3120:1;3089:28;3093:3;:12;;;3113:3;3107;:9;3089:3;:28::i;:::-;:32;3077:6;:45::i;:::-;3033:100;3272:3;3266:10;3355:6;3349:13;3483:3;3478:2;3470:6;3466:15;3462:25;3454:33;;3579:6;3573:3;3568;3564:13;3561:25;3558:2;;;3629:3;3624;3620:13;3612:6;3605:29;3558:2;3678;3672:4;3668:13;3661:20;;3189:502;;3751:165;3765:2;3758:3;:9;;3751:165;;;3840:3;3834:10;3828:4;3821:24;3880:2;3872:10;;;;3903:2;3896:9;;;;3776:2;3769:9;;;;3751:165;;;3990:1;3983:3;3978:2;:8;3970:3;:17;:21;3958:33;;4059:4;4055:9;4049:3;4043:10;4039:26;4111:4;4104;4098:11;4094:22;4155:7;4145:8;4142:21;4136:4;4129:35;4010:164;;4191:3;4184:10;;2875:1326;;;;;;;;;:::o;5419:715::-;5502:6;;:::i;:::-;5538:3;:12;;;5531:3;:19;;5527:79;;;5566:29;5573:3;5593:1;5578:3;:12;;;:16;5566:6;:29::i;:::-;5527:79;5708:3;5702:10;5791:6;5785:13;5915:2;5909:3;5901:6;5897:16;5893:25;5945:4;5939;5931:19;6028:6;6023:3;6020:15;6017:2;;;6081:1;6073:6;6069:14;6061:6;6054:30;6017:2;5625:483;;;6124:3;6117:10;;5419:715;;;;;:::o;9406:730::-;9495:6;;:::i;:::-;9613:9;9536:3;:12;;;9530:3;9524;:9;:24;9520:83;;;9564:28;9571:3;9590:1;9583:3;9577;:9;9576:15;9564:6;:28::i;:::-;9520:83;9638:1;9632:3;9625;:10;:14;9613:26;;9741:3;9735:10;9868:3;9862;9854:6;9850:16;9846:26;9930:4;9922;9918:9;9911:4;9905:11;9901:27;9898:37;9892:4;9885:51;10030:6;10024:13;10018:3;10013;10009:13;10006:32;10003:2;;;10081:3;10076;10072:13;10064:6;10057:29;10003:2;9658:452;;10126:3;10119:10;;9406:730;;;;;;;:::o;2035:134::-;2085:4;2109:1;2105;:5;2101:44;;;2133:1;2126:8;;;;2101:44;2161:1;2154:8;;2035:134;;;;;:::o;1862:167::-;1935:19;1957:3;:7;;;1935:29;;1974:19;1979:3;1984:8;1974:4;:19::i;:::-;;2003;2010:3;2015:6;2003;:19::i;:::-;;1862:167;;;:::o;34359:3192:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "\n// // File: @ensdomains/buffer/contracts/Buffer.sol\n\n// pragma solidity >0.4.18;\n\n// /**\n// * @dev A library for working with mutable byte buffers in Solidity.\n// *\n// * Byte buffers are mutable and expandable, and provide a variety of primitives\n// * for writing to them. At any time you can fetch a bytes object containing the\n// * current contents of the buffer. The bytes object should not be stored between\n// * operations, as it may change due to resizing of the buffer.\n// */\n// library Buffer {\n//     /**\n//     * @dev Represents a mutable buffer. Buffers have a current value (buf) and\n//     *      a capacity. The capacity may be longer than the current value, in\n//     *      which case it can be extended without the need to allocate more memory.\n//     */\n//     struct buffer {\n//         bytes buf;\n//         uint capacity;\n//     }\n\n//     /**\n//     * @dev Initializes a buffer with an initial capacity.\n//     * @param buf The buffer to initialize.\n//     * @param capacity The number of bytes of space to allocate the buffer.\n//     * @return The buffer, for chaining.\n//     */\n//     function init(buffer memory buf, uint capacity) internal pure returns(buffer memory) {\n//         if (capacity % 32 != 0) {\n//             capacity += 32 - (capacity % 32);\n//         }\n//         // Allocate space for the buffer data\n//         buf.capacity = capacity;\n//         assembly {\n//             let ptr := mload(0x40)\n//             mstore(buf, ptr)\n//             mstore(ptr, 0)\n//             mstore(0x40, add(32, add(ptr, capacity)))\n//         }\n//         return buf;\n//     }\n\n//     /**\n//     * @dev Initializes a new buffer from an existing bytes object.\n//     *      Changes to the buffer may mutate the original value.\n//     * @param b The bytes object to initialize the buffer with.\n//     * @return A new buffer.\n//     */\n//     function fromBytes(bytes memory b) internal pure returns(buffer memory) {\n//         buffer memory buf;\n//         buf.buf = b;\n//         buf.capacity = b.length;\n//         return buf;\n//     }\n\n//     function resize(buffer memory buf, uint capacity) private pure {\n//         bytes memory oldbuf = buf.buf;\n//         init(buf, capacity);\n//         append(buf, oldbuf);\n//     }\n\n//     function max(uint a, uint b) private pure returns(uint) {\n//         if (a > b) {\n//             return a;\n//         }\n//         return b;\n//     }\n\n//     /**\n//     * @dev Sets buffer length to 0.\n//     * @param buf The buffer to truncate.\n//     * @return The original buffer, for chaining..\n//     */\n//     function truncate(buffer memory buf) internal pure returns (buffer memory) {\n//         assembly {\n//             let bufptr := mload(buf)\n//             mstore(bufptr, 0)\n//         }\n//         return buf;\n//     }\n\n//     /**\n//     * @dev Writes a byte string to a buffer. Resizes if doing so would exceed\n//     *      the capacity of the buffer.\n//     * @param buf The buffer to append to.\n//     * @param off The start offset to write to.\n//     * @param data The data to append.\n//     * @param len The number of bytes to copy.\n//     * @return The original buffer, for chaining.\n//     */\n//     function write(buffer memory buf, uint off, bytes memory data, uint len) internal pure returns(buffer memory) {\n//         require(len <= data.length);\n\n//         if (off + len > buf.capacity) {\n//             resize(buf, max(buf.capacity, len + off) * 2);\n//         }\n\n//         uint dest;\n//         uint src;\n//         assembly {\n//             // Memory address of the buffer data\n//             let bufptr := mload(buf)\n//             // Length of existing buffer data\n//             let buflen := mload(bufptr)\n//             // Start address = buffer address + offset + sizeof(buffer length)\n//             dest := add(add(bufptr, 32), off)\n//             // Update buffer length if we're extending it\n//             if gt(add(len, off), buflen) {\n//                 mstore(bufptr, add(len, off))\n//             }\n//             src := add(data, 32)\n//         }\n\n//         // Copy word-length chunks while possible\n//         for (; len >= 32; len -= 32) {\n//             assembly {\n//                 mstore(dest, mload(src))\n//             }\n//             dest += 32;\n//             src += 32;\n//         }\n\n//         // Copy remaining bytes\n//         uint mask = 256 ** (32 - len) - 1;\n//         assembly {\n//             let srcpart := and(mload(src), not(mask))\n//             let destpart := and(mload(dest), mask)\n//             mstore(dest, or(destpart, srcpart))\n//         }\n\n//         return buf;\n//     }\n\n//     /**\n//     * @dev Appends a byte string to a buffer. Resizes if doing so would exceed\n//     *      the capacity of the buffer.\n//     * @param buf The buffer to append to.\n//     * @param data The data to append.\n//     * @param len The number of bytes to copy.\n//     * @return The original buffer, for chaining.\n//     */\n//     function append(buffer memory buf, bytes memory data, uint len) internal pure returns (buffer memory) {\n//         return write(buf, buf.buf.length, data, len);\n//     }\n\n//     /**\n//     * @dev Appends a byte string to a buffer. Resizes if doing so would exceed\n//     *      the capacity of the buffer.\n//     * @param buf The buffer to append to.\n//     * @param data The data to append.\n//     * @return The original buffer, for chaining.\n//     */\n//     function append(buffer memory buf, bytes memory data) internal pure returns (buffer memory) {\n//         return write(buf, buf.buf.length, data, data.length);\n//     }\n\n//     /**\n//     * @dev Writes a byte to the buffer. Resizes if doing so would exceed the\n//     *      capacity of the buffer.\n//     * @param buf The buffer to append to.\n//     * @param off The offset to write the byte at.\n//     * @param data The data to append.\n//     * @return The original buffer, for chaining.\n//     */\n//     function writeUint8(buffer memory buf, uint off, uint8 data) internal pure returns(buffer memory) {\n//         if (off >= buf.capacity) {\n//             resize(buf, buf.capacity * 2);\n//         }\n\n//         assembly {\n//             // Memory address of the buffer data\n//             let bufptr := mload(buf)\n//             // Length of existing buffer data\n//             let buflen := mload(bufptr)\n//             // Address = buffer address + sizeof(buffer length) + off\n//             let dest := add(add(bufptr, off), 32)\n//             mstore8(dest, data)\n//             // Update buffer length if we extended it\n//             if eq(off, buflen) {\n//                 mstore(bufptr, add(buflen, 1))\n//             }\n//         }\n//         return buf;\n//     }\n\n//     /**\n//     * @dev Appends a byte to the buffer. Resizes if doing so would exceed the\n//     *      capacity of the buffer.\n//     * @param buf The buffer to append to.\n//     * @param data The data to append.\n//     * @return The original buffer, for chaining.\n//     */\n//     function appendUint8(buffer memory buf, uint8 data) internal pure returns(buffer memory) {\n//         return writeUint8(buf, buf.buf.length, data);\n//     }\n\n//     /**\n//     * @dev Writes up to 32 bytes to the buffer. Resizes if doing so would\n//     *      exceed the capacity of the buffer.\n//     * @param buf The buffer to append to.\n//     * @param off The offset to write at.\n//     * @param data The data to append.\n//     * @param len The number of bytes to write (left-aligned).\n//     * @return The original buffer, for chaining.\n//     */\n//     function write(buffer memory buf, uint off, bytes32 data, uint len) private pure returns(buffer memory) {\n//         if (len + off > buf.capacity) {\n//             resize(buf, (len + off) * 2);\n//         }\n\n//         uint mask = 256 ** len - 1;\n//         // Right-align data\n//         data = data >> (8 * (32 - len));\n//         assembly {\n//             // Memory address of the buffer data\n//             let bufptr := mload(buf)\n//             // Address = buffer address + sizeof(buffer length) + off + len\n//             let dest := add(add(bufptr, off), len)\n//             mstore(dest, or(and(mload(dest), not(mask)), data))\n//             // Update buffer length if we extended it\n//             if gt(add(off, len), mload(bufptr)) {\n//                 mstore(bufptr, add(off, len))\n//             }\n//         }\n//         return buf;\n//     }\n\n//     /**\n//     * @dev Writes a bytes20 to the buffer. Resizes if doing so would exceed the\n//     *      capacity of the buffer.\n//     * @param buf The buffer to append to.\n//     * @param off The offset to write at.\n//     * @param data The data to append.\n//     * @return The original buffer, for chaining.\n//     */\n//     function writeBytes20(buffer memory buf, uint off, bytes20 data) internal pure returns (buffer memory) {\n//         return write(buf, off, bytes32(data), 20);\n//     }\n\n//     /**\n//     * @dev Appends a bytes20 to the buffer. Resizes if doing so would exceed\n//     *      the capacity of the buffer.\n//     * @param buf The buffer to append to.\n//     * @param data The data to append.\n//     * @return The original buffer, for chhaining.\n//     */\n//     function appendBytes20(buffer memory buf, bytes20 data) internal pure returns (buffer memory) {\n//         return write(buf, buf.buf.length, bytes32(data), 20);\n//     }\n\n//     /**\n//     * @dev Appends a bytes32 to the buffer. Resizes if doing so would exceed\n//     *      the capacity of the buffer.\n//     * @param buf The buffer to append to.\n//     * @param data The data to append.\n//     * @return The original buffer, for chaining.\n//     */\n//     function appendBytes32(buffer memory buf, bytes32 data) internal pure returns (buffer memory) {\n//         return write(buf, buf.buf.length, data, 32);\n//     }\n\n//     /**\n//     * @dev Writes an integer to the buffer. Resizes if doing so would exceed\n//     *      the capacity of the buffer.\n//     * @param buf The buffer to append to.\n//     * @param off The offset to write at.\n//     * @param data The data to append.\n//     * @param len The number of bytes to write (right-aligned).\n//     * @return The original buffer, for chaining.\n//     */\n//     function writeInt(buffer memory buf, uint off, uint data, uint len) private pure returns(buffer memory) {\n//         if (len + off > buf.capacity) {\n//             resize(buf, (len + off) * 2);\n//         }\n\n//         uint mask = 256 ** len - 1;\n//         assembly {\n//             // Memory address of the buffer data\n//             let bufptr := mload(buf)\n//             // Address = buffer address + off + sizeof(buffer length) + len\n//             let dest := add(add(bufptr, off), len)\n//             mstore(dest, or(and(mload(dest), not(mask)), data))\n//             // Update buffer length if we extended it\n//             if gt(add(off, len), mload(bufptr)) {\n//                 mstore(bufptr, add(off, len))\n//             }\n//         }\n//         return buf;\n//     }\n\n//     /**\n//      * @dev Appends a byte to the end of the buffer. Resizes if doing so would\n//      * exceed the capacity of the buffer.\n//      * @param buf The buffer to append to.\n//      * @param data The data to append.\n//      * @return The original buffer.\n//      */\n//     function appendInt(buffer memory buf, uint data, uint len) internal pure returns(buffer memory) {\n//         return writeInt(buf, buf.buf.length, data, len);\n//     }\n// }\n\n// // File: solidity-cborutils/contracts/CBOR.sol\n\n// pragma solidity ^0.4.19;\n\n\n// library CBOR {\n//     using Buffer for Buffer.buffer;\n\n//     uint8 private constant MAJOR_TYPE_INT = 0;\n//     uint8 private constant MAJOR_TYPE_NEGATIVE_INT = 1;\n//     uint8 private constant MAJOR_TYPE_BYTES = 2;\n//     uint8 private constant MAJOR_TYPE_STRING = 3;\n//     uint8 private constant MAJOR_TYPE_ARRAY = 4;\n//     uint8 private constant MAJOR_TYPE_MAP = 5;\n//     uint8 private constant MAJOR_TYPE_CONTENT_FREE = 7;\n\n//     function encodeType(Buffer.buffer memory buf, uint8 major, uint value) private pure {\n//         if(value <= 23) {\n//             buf.appendUint8(uint8((major << 5) | value));\n//         } else if(value <= 0xFF) {\n//             buf.appendUint8(uint8((major << 5) | 24));\n//             buf.appendInt(value, 1);\n//         } else if(value <= 0xFFFF) {\n//             buf.appendUint8(uint8((major << 5) | 25));\n//             buf.appendInt(value, 2);\n//         } else if(value <= 0xFFFFFFFF) {\n//             buf.appendUint8(uint8((major << 5) | 26));\n//             buf.appendInt(value, 4);\n//         } else if(value <= 0xFFFFFFFFFFFFFFFF) {\n//             buf.appendUint8(uint8((major << 5) | 27));\n//             buf.appendInt(value, 8);\n//         }\n//     }\n\n//     function encodeIndefiniteLengthType(Buffer.buffer memory buf, uint8 major) private pure {\n//         buf.appendUint8(uint8((major << 5) | 31));\n//     }\n\n//     function encodeUInt(Buffer.buffer memory buf, uint value) internal pure {\n//         encodeType(buf, MAJOR_TYPE_INT, value);\n//     }\n\n//     function encodeInt(Buffer.buffer memory buf, int value) internal pure {\n//         if(value >= 0) {\n//             encodeType(buf, MAJOR_TYPE_INT, uint(value));\n//         } else {\n//             encodeType(buf, MAJOR_TYPE_NEGATIVE_INT, uint(-1 - value));\n//         }\n//     }\n\n//     function encodeBytes(Buffer.buffer memory buf, bytes value) internal pure {\n//         encodeType(buf, MAJOR_TYPE_BYTES, value.length);\n//         buf.append(value);\n//     }\n\n//     function encodeString(Buffer.buffer memory buf, string value) internal pure {\n//         encodeType(buf, MAJOR_TYPE_STRING, bytes(value).length);\n//         buf.append(bytes(value));\n//     }\n\n//     function startArray(Buffer.buffer memory buf) internal pure {\n//         encodeIndefiniteLengthType(buf, MAJOR_TYPE_ARRAY);\n//     }\n\n//     function startMap(Buffer.buffer memory buf) internal pure {\n//         encodeIndefiniteLengthType(buf, MAJOR_TYPE_MAP);\n//     }\n\n//     function endSequence(Buffer.buffer memory buf) internal pure {\n//         encodeIndefiniteLengthType(buf, MAJOR_TYPE_CONTENT_FREE);\n//     }\n// }\n\n// // File: contracts/Chainlink.sol\n\n// pragma solidity 0.4.24;\n\n\n// /**\n//  * @title Library for common Chainlink functions\n//  * @dev Uses imported CBOR library for encoding to buffer\n//  */\n// library Chainlink {\n//   uint256 internal constant defaultBufferSize = 256;\n\n//   using CBOR for Buffer.buffer;\n\n//   struct Request {\n//     bytes32 id;\n//     address callbackAddress;\n//     bytes4 callbackFunctionId;\n//     uint256 nonce;\n//     Buffer.buffer buf;\n//   }\n\n//   /**\n//    * @notice Initializes a Chainlink request\n//    * @dev Sets the ID, callback address, and callback function signature on the request\n//    * @param self The uninitialized request\n//    * @param _id The Job Specification ID\n//    * @param _callbackAddress The callback address\n//    * @param _callbackFunction The callback function signature\n//    * @return The initialized request\n//    */\n//   function initialize(\n//     Request memory self,\n//     bytes32 _id,\n//     address _callbackAddress,\n//     bytes4 _callbackFunction\n//   ) internal pure returns (Chainlink.Request memory) {\n//     Buffer.init(self.buf, defaultBufferSize);\n//     self.id = _id;\n//     self.callbackAddress = _callbackAddress;\n//     self.callbackFunctionId = _callbackFunction;\n//     return self;\n//   }\n\n//   /**\n//    * @notice Sets the data for the buffer without encoding CBOR on-chain\n//    * @dev CBOR can be closed with curly-brackets {} or they can be left off\n//    * @param self The initialized request\n//    * @param _data The CBOR data\n//    */\n//   function setBuffer(Request memory self, bytes _data)\n//     internal pure\n//   {\n//     Buffer.init(self.buf, _data.length);\n//     Buffer.append(self.buf, _data);\n//   }\n\n//   /**\n//    * @notice Adds a string value to the request with a given key name\n//    * @param self The initialized request\n//    * @param _key The name of the key\n//    * @param _value The string value to add\n//    */\n//   function add(Request memory self, string _key, string _value)\n//     internal pure\n//   {\n//     self.buf.encodeString(_key);\n//     self.buf.encodeString(_value);\n//   }\n\n//   /**\n//    * @notice Adds a bytes value to the request with a given key name\n//    * @param self The initialized request\n//    * @param _key The name of the key\n//    * @param _value The bytes value to add\n//    */\n//   function addBytes(Request memory self, string _key, bytes _value)\n//     internal pure\n//   {\n//     self.buf.encodeString(_key);\n//     self.buf.encodeBytes(_value);\n//   }\n\n//   /**\n//    * @notice Adds a int256 value to the request with a given key name\n//    * @param self The initialized request\n//    * @param _key The name of the key\n//    * @param _value The int256 value to add\n//    */\n//   function addInt(Request memory self, string _key, int256 _value)\n//     internal pure\n//   {\n//     self.buf.encodeString(_key);\n//     self.buf.encodeInt(_value);\n//   }\n\n//   /**\n//    * @notice Adds a uint256 value to the request with a given key name\n//    * @param self The initialized request\n//    * @param _key The name of the key\n//    * @param _value The uint256 value to add\n//    */\n//   function addUint(Request memory self, string _key, uint256 _value)\n//     internal pure\n//   {\n//     self.buf.encodeString(_key);\n//     self.buf.encodeUInt(_value);\n//   }\n\n//   /**\n//    * @notice Adds an array of strings to the request with a given key name\n//    * @param self The initialized request\n//    * @param _key The name of the key\n//    * @param _values The array of string values to add\n//    */\n//   function addStringArray(Request memory self, string _key, string[] memory _values)\n//     internal pure\n//   {\n//     self.buf.encodeString(_key);\n//     self.buf.startArray();\n//     for (uint256 i = 0; i < _values.length; i++) {\n//       self.buf.encodeString(_values[i]);\n//     }\n//     self.buf.endSequence();\n//   }\n// }\n\n// // File: contracts/ENSResolver.sol\n\n// pragma solidity 0.4.24;\n\n// contract ENSResolver {\n//   function addr(bytes32 node) public view returns (address);\n// }\n\n// // File: contracts/interfaces/ENSInterface.sol\n\n// pragma solidity ^0.4.18;\n\n// interface ENSInterface {\n\n//     // Logged when the owner of a node assigns a new owner to a subnode.\n//     event NewOwner(bytes32 indexed node, bytes32 indexed label, address owner);\n\n//     // Logged when the owner of a node transfers ownership to a new account.\n//     event Transfer(bytes32 indexed node, address owner);\n\n//     // Logged when the resolver for a node changes.\n//     event NewResolver(bytes32 indexed node, address resolver);\n\n//     // Logged when the TTL of a node changes\n//     event NewTTL(bytes32 indexed node, uint64 ttl);\n\n\n//     function setSubnodeOwner(bytes32 node, bytes32 label, address owner) external;\n//     function setResolver(bytes32 node, address resolver) external;\n//     function setOwner(bytes32 node, address owner) external;\n//     function setTTL(bytes32 node, uint64 ttl) external;\n//     function owner(bytes32 node) external view returns (address);\n//     function resolver(bytes32 node) external view returns (address);\n//     function ttl(bytes32 node) external view returns (uint64);\n\n// }\n\n// // File: contracts/interfaces/LinkTokenInterface.sol\n\n// pragma solidity 0.4.24;\n\n// interface LinkTokenInterface {\n//   function allowance(address owner, address spender) external returns (bool success);\n//   function approve(address spender, uint256 value) external returns (bool success);\n//   function balanceOf(address owner) external returns (uint256 balance);\n//   function decimals() external returns (uint8 decimalPlaces);\n//   function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\n//   function increaseApproval(address spender, uint256 subtractedValue) external;\n//   function name() external returns (string tokenName);\n//   function symbol() external returns (string tokenSymbol);\n//   function totalSupply() external returns (uint256 totalTokensIssued);\n//   function transfer(address to, uint256 value) external returns (bool success);\n//   function transferAndCall(address to, uint256 value, bytes data) external returns (bool success);\n//   function transferFrom(address from, address to, uint256 value) external returns (bool success);\n// }\n\n// // File: contracts/interfaces/ChainlinkRequestInterface.sol\n\n// pragma solidity 0.4.24;\n\n// interface ChainlinkRequestInterface {\n//   function oracleRequest(\n//     address sender,\n//     uint256 payment,\n//     bytes32 id,\n//     address callbackAddress,\n//     bytes4 callbackFunctionId,\n//     uint256 nonce,\n//     uint256 version,\n//     bytes data\n//   ) external;\n\n//   function cancelOracleRequest(\n//     bytes32 requestId,\n//     uint256 payment,\n//     bytes4 callbackFunctionId,\n//     uint256 expiration\n//   ) external;\n// }\n\n// // File: contracts/interfaces/PointerInterface.sol\n\n// pragma solidity 0.4.24;\n\n// interface PointerInterface {\n//   function getAddress() external view returns (address);\n// }\n\n// // File: openzeppelin-solidity/contracts/math/SafeMath.sol\n\n// pragma solidity ^0.4.24;\n\n\n// /**\n//  * @title SafeMath\n//  * @dev Math operations with safety checks that throw on error\n//  */\n// library SafeMath {\n\n//   /**\n//   * @dev Multiplies two numbers, throws on overflow.\n//   */\n//   function mul(uint256 _a, uint256 _b) internal pure returns (uint256 c) {\n//     // Gas optimization: this is cheaper than asserting 'a' not being zero, but the\n//     // benefit is lost if 'b' is also tested.\n//     // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n//     if (_a == 0) {\n//       return 0;\n//     }\n\n//     c = _a * _b;\n//     assert(c / _a == _b);\n//     return c;\n//   }\n\n//   /**\n//   * @dev Integer division of two numbers, truncating the quotient.\n//   */\n//   function div(uint256 _a, uint256 _b) internal pure returns (uint256) {\n//     // assert(_b > 0); // Solidity automatically throws when dividing by 0\n//     // uint256 c = _a / _b;\n//     // assert(_a == _b * c + _a % _b); // There is no case in which this doesn't hold\n//     return _a / _b;\n//   }\n\n//   /**\n//   * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\n//   */\n//   function sub(uint256 _a, uint256 _b) internal pure returns (uint256) {\n//     assert(_b <= _a);\n//     return _a - _b;\n//   }\n\n//   /**\n//   * @dev Adds two numbers, throws on overflow.\n//   */\n//   function add(uint256 _a, uint256 _b) internal pure returns (uint256 c) {\n//     c = _a + _b;\n//     assert(c >= _a);\n//     return c;\n//   }\n// }\n\n// // File: contracts/ChainlinkClient.sol\n\n// pragma solidity 0.4.24;\n\n\n\n\n\n\n\n\n// /**\n//  * @title The ChainlinkClient contract\n//  * @notice Contract writers can inherit this contract in order to create requests for the\n//  * Chainlink network\n//  */\n// contract ChainlinkClient {\n//   using Chainlink for Chainlink.Request;\n//   using SafeMath for uint256;\n\n//   uint256 constant internal LINK = 10**18;\n//   uint256 constant private AMOUNT_OVERRIDE = 0;\n//   address constant private SENDER_OVERRIDE = 0x0;\n//   uint256 constant private ARGS_VERSION = 1;\n//   bytes32 constant private ENS_TOKEN_SUBNAME = keccak256(\"link\");\n//   bytes32 constant private ENS_ORACLE_SUBNAME = keccak256(\"oracle\");\n//   address constant private LINK_TOKEN_POINTER = 0xC89bD4E1632D3A43CB03AAAd5262cbe4038Bc571;\n\n//   ENSInterface private ens;\n//   bytes32 private ensNode;\n//   LinkTokenInterface private link;\n//   ChainlinkRequestInterface private oracle;\n//   uint256 private requests = 1;\n//   mapping(bytes32 => address) private pendingRequests;\n\n//   event ChainlinkRequested(bytes32 indexed id);\n//   event ChainlinkFulfilled(bytes32 indexed id);\n//   event ChainlinkCancelled(bytes32 indexed id);\n\n//   /**\n//    * @notice Creates a request that can hold additional parameters\n//    * @param _specId The Job Specification ID that the request will be created for\n//    * @param _callbackAddress The callback address that the response will be sent to\n//    * @param _callbackFunctionSignature The callback function signature to use for the callback address\n//    * @return A Chainlink Request struct in memory\n//    */\n//   function buildChainlinkRequest(\n//     bytes32 _specId,\n//     address _callbackAddress,\n//     bytes4 _callbackFunctionSignature\n//   ) internal pure returns (Chainlink.Request memory) {\n//     Chainlink.Request memory req;\n//     return req.initialize(_specId, _callbackAddress, _callbackFunctionSignature);\n//   }\n\n//   /**\n//    * @notice Creates a Chainlink request to the stored oracle address\n//    * @dev Calls `chainlinkRequestTo` with the stored oracle address\n//    * @param _req The initialized Chainlink Request\n//    * @param _payment The amount of LINK to send for the request\n//    * @return The request ID\n//    */\n//   function sendChainlinkRequest(Chainlink.Request memory _req, uint256 _payment)\n//     internal\n//     returns (bytes32)\n//   {\n//     return sendChainlinkRequestTo(oracle, _req, _payment);\n//   }\n\n//   /**\n//    * @notice Creates a Chainlink request to the specified oracle address\n//    * @dev Generates and stores a request ID, increments the local nonce, and uses `transferAndCall` to\n//    * send LINK which creates a request on the target oracle contract.\n//    * Emits ChainlinkRequested event.\n//    * @param _oracle The address of the oracle for the request\n//    * @param _req The initialized Chainlink Request\n//    * @param _payment The amount of LINK to send for the request\n//    * @return The request ID\n//    */\n//   function sendChainlinkRequestTo(address _oracle, Chainlink.Request memory _req, uint256 _payment)\n//     internal\n//     returns (bytes32 requestId)\n//   {\n//     requestId = keccak256(abi.encodePacked(this, requests));\n//     _req.nonce = requests;\n//     pendingRequests[requestId] = _oracle;\n//     emit ChainlinkRequested(requestId);\n//     require(link.transferAndCall(_oracle, _payment, encodeRequest(_req)), \"unable to transferAndCall to oracle\");\n//     requests += 1;\n\n//     return requestId;\n//   }\n\n//   /**\n//    * @notice Allows a request to be cancelled if it has not been fulfilled\n//    * @dev Requires keeping track of the expiration value emitted from the oracle contract.\n//    * Deletes the request from the `pendingRequests` mapping.\n//    * Emits ChainlinkCancelled event.\n//    * @param _requestId The request ID\n//    * @param _payment The amount of LINK sent for the request\n//    * @param _callbackFunc The callback function specified for the request\n//    * @param _expiration The time of the expiration for the request\n//    */\n//   function cancelChainlinkRequest(\n//     bytes32 _requestId,\n//     uint256 _payment,\n//     bytes4 _callbackFunc,\n//     uint256 _expiration\n//   )\n//     internal\n//   {\n//     ChainlinkRequestInterface requested = ChainlinkRequestInterface(pendingRequests[_requestId]);\n//     delete pendingRequests[_requestId];\n//     emit ChainlinkCancelled(_requestId);\n//     requested.cancelOracleRequest(_requestId, _payment, _callbackFunc, _expiration);\n//   }\n\n//   /**\n//    * @notice Sets the stored oracle address\n//    * @param _oracle The address of the oracle contract\n//    */\n//   function setChainlinkOracle(address _oracle) internal {\n//     oracle = ChainlinkRequestInterface(_oracle);\n//   }\n\n//   /**\n//    * @notice Sets the LINK token address\n//    * @param _link The address of the LINK token contract\n//    */\n//   function setChainlinkToken(address _link) internal {\n//     link = LinkTokenInterface(_link);\n//   }\n\n//   /**\n//    * @notice Sets the Chainlink token address for the public\n//    * network as given by the Pointer contract\n//    */\n//   function setPublicChainlinkToken() internal {\n//     setChainlinkToken(PointerInterface(LINK_TOKEN_POINTER).getAddress());\n//   }\n\n//   /**\n//    * @notice Retrieves the stored address of the LINK token\n//    * @return The address of the LINK token\n//    */\n//   function chainlinkTokenAddress()\n//     internal\n//     view\n//     returns (address)\n//   {\n//     return address(link);\n//   }\n\n//   /**\n//    * @notice Retrieves the stored address of the oracle contract\n//    * @return The address of the oracle contract\n//    */\n//   function chainlinkOracleAddress()\n//     internal\n//     view\n//     returns (address)\n//   {\n//     return address(oracle);\n//   }\n\n//   /**\n//    * @notice Allows for a request which was created on another contract to be fulfilled\n//    * on this contract\n//    * @param _oracle The address of the oracle contract that will fulfill the request\n//    * @param _requestId The request ID used for the response\n//    */\n//   function addChainlinkExternalRequest(address _oracle, bytes32 _requestId)\n//     internal\n//     notPendingRequest(_requestId)\n//   {\n//     pendingRequests[_requestId] = _oracle;\n//   }\n\n//   /**\n//    * @notice Sets the stored oracle and LINK token contracts with the addresses resolved by ENS\n//    * @dev Accounts for subnodes having different resolvers\n//    * @param _ens The address of the ENS contract\n//    * @param _node The ENS node hash\n//    */\n//   function useChainlinkWithENS(address _ens, bytes32 _node)\n//     internal\n//   {\n//     ens = ENSInterface(_ens);\n//     ensNode = _node;\n//     bytes32 linkSubnode = keccak256(abi.encodePacked(ensNode, ENS_TOKEN_SUBNAME));\n//     ENSResolver resolver = ENSResolver(ens.resolver(linkSubnode));\n//     setChainlinkToken(resolver.addr(linkSubnode));\n//     updateChainlinkOracleWithENS();\n//   }\n\n//   /**\n//    * @notice Sets the stored oracle contract with the address resolved by ENS\n//    * @dev This may be called on its own as long as `useChainlinkWithENS` has been called previously\n//    */\n//   function updateChainlinkOracleWithENS()\n//     internal\n//   {\n//     bytes32 oracleSubnode = keccak256(abi.encodePacked(ensNode, ENS_ORACLE_SUBNAME));\n//     ENSResolver resolver = ENSResolver(ens.resolver(oracleSubnode));\n//     setChainlinkOracle(resolver.addr(oracleSubnode));\n//   }\n\n//   /**\n//    * @notice Encodes the request to be sent to the oracle contract\n//    * @dev The Chainlink node expects values to be in order for the request to be picked up. Order of types\n//    * will be validated in the oracle contract.\n//    * @param _req The initialized Chainlink Request\n//    * @return The bytes payload for the `transferAndCall` method\n//    */\n//   function encodeRequest(Chainlink.Request memory _req)\n//     private\n//     view\n//     returns (bytes memory)\n//   {\n//     return abi.encodeWithSelector(\n//       oracle.oracleRequest.selector,\n//       SENDER_OVERRIDE, // Sender value - overridden by onTokenTransfer by the requesting contract's address\n//       AMOUNT_OVERRIDE, // Amount value - overridden by onTokenTransfer by the actual amount of LINK sent\n//       _req.id,\n//       _req.callbackAddress,\n//       _req.callbackFunctionId,\n//       _req.nonce,\n//       ARGS_VERSION,\n//       _req.buf.buf);\n//   }\n\n//   /**\n//    * @notice Ensures that the fulfillment is valid for this contract\n//    * @dev Use if the contract developer prefers methods instead of modifiers for validation\n//    * @param _requestId The request ID for fulfillment\n//    */\n//   function validateChainlinkCallback(bytes32 _requestId)\n//     internal\n//     recordChainlinkFulfillment(_requestId)\n//     // solium-disable-next-line no-empty-blocks\n//   {}\n\n//   /**\n//    * @dev Reverts if the sender is not the oracle of the request.\n//    * Emits ChainlinkFulfilled event.\n//    * @param _requestId The request ID for fulfillment\n//    */\n//   modifier recordChainlinkFulfillment(bytes32 _requestId) {\n//     require(msg.sender == pendingRequests[_requestId], \"Source must be the oracle of the request\");\n//     delete pendingRequests[_requestId];\n//     emit ChainlinkFulfilled(_requestId);\n//     _;\n//   }\n\n//   /**\n//    * @dev Reverts if the request is already pending\n//    * @param _requestId The request ID for fulfillment\n//    */\n//   modifier notPendingRequest(bytes32 _requestId) {\n//     require(pendingRequests[_requestId] == address(0), \"Request is already pending\");\n//     _;\n//   }\n// }\n\n// // File: openzeppelin-solidity/contracts/ownership/Ownable.sol\n\n// pragma solidity ^0.4.24;\n\n\n// /**\n//  * @title Ownable\n//  * @dev The Ownable contract has an owner address, and provides basic authorization control\n//  * functions, this simplifies the implementation of \"user permissions\".\n//  */\n// contract Ownable {\n//   address public owner;\n\n\n//   event OwnershipRenounced(address indexed previousOwner);\n//   event OwnershipTransferred(\n//     address indexed previousOwner,\n//     address indexed newOwner\n//   );\n\n\n//   /**\n//    * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n//    * account.\n//    */\n//   constructor() public {\n//     owner = msg.sender;\n//   }\n\n//   /**\n//    * @dev Throws if called by any account other than the owner.\n//    */\n//   modifier onlyOwner() {\n//     require(msg.sender == owner);\n//     _;\n//   }\n\n//   /**\n//    * @dev Allows the current owner to relinquish control of the contract.\n//    * @notice Renouncing to ownership will leave the contract without an owner.\n//    * It will not be possible to call the functions with the `onlyOwner`\n//    * modifier anymore.\n//    */\n//   function renounceOwnership() public onlyOwner {\n//     emit OwnershipRenounced(owner);\n//     owner = address(0);\n//   }\n\n//   /**\n//    * @dev Allows the current owner to transfer control of the contract to a newOwner.\n//    * @param _newOwner The address to transfer ownership to.\n//    */\n//   function transferOwnership(address _newOwner) public onlyOwner {\n//     _transferOwnership(_newOwner);\n//   }\n\n//   /**\n//    * @dev Transfers control of the contract to a newOwner.\n//    * @param _newOwner The address to transfer ownership to.\n//    */\n//   function _transferOwnership(address _newOwner) internal {\n//     require(_newOwner != address(0));\n//     emit OwnershipTransferred(owner, _newOwner);\n//     owner = _newOwner;\n//   }\n// }\n\n// // File: ../examples/testnet/TestnetConsumerBase.sol\n\n\npragma solidity >=0.4.22 <0.6.0;\nimport \"chainlink/contracts/ChainlinkClient.sol\";\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\n\ncontract DonationsManager is ChainlinkClient, Ownable {\n  \n    event UpdatedISP(\n      address indexed isp, \n      bytes32 indexed countryName,\n      uint indexed monthlyServiceCost\n    );\n\n    event DonationAdded(\n      bytes32 countryName,\n      address donor, \n      uint amount, \n      uint time\n    );\n\n    event WithdrawalISP(\n      bytes32 countryName,\n      address ISP, \n      uint amount\n    );\n\n    address public _owner;\n    uint256 currentPrice;\n\n    struct Country {\n      address currentISP;\n      uint balance;\n      uint monthlyServiceCost;\n    }\n    mapping (bytes32 => Country) public countries;\n\n    struct Donation {\n      address donor;\n      uint amount;\n      uint timestamp;\n      bytes32 countryName;\n    }\n\n    mapping (address => Donation) public donations;\n\n    modifier isISP(bytes32 name) {\n        require(countries[name].currentISP == msg.sender, 'not the ISP for this country');\n        _;\n    }\n    modifier onlyOwner() {\n        require(msg.sender == _owner, 'not the owner');\n    _;\n    }\n\n    constructor() public {\n        _owner = msg.sender;\n        setPublicChainlinkToken();\n\n    }\n    \n    function updateISP(address isp, bytes32 country, uint serviceCost) public onlyOwner {\n        countries[country].currentISP = isp;\n        countries[country].monthlyServiceCost = serviceCost;\n        emit UpdatedISP(isp, country, serviceCost);\n    }\n    function addDonation(bytes32 nameofCountry) public {\n        donations[msg.sender].donor = msg.sender;\n        donations[msg.sender].amount = msg.value;\n        donations[msg.sender].countryName = nameofCountry;\n        donations[msg.sender].timestamp = now;\n        emit DonationAdded(nameofCountry, msg.sender, msg.value, now);\n    }\n    function withdraw(bytes32 countryName) public isISP(countryName) {\n        require(countries[countryName].currentISP == msg.sender, 'not the ISP for this country');\n        require(countries[countryName].balance >= countries[countryName].monthlyServiceCost, 'not enough funding for cover monthly cost');\n        countries[countryName].balance -= countries[countryName].monthlyServiceCost;\n        msg.sender.transfer(countries[countryName].monthlyServiceCost);\n        emit WithdrawalISP(countryName, msg.sender, countries[countryName].monthlyServiceCost);\n    }\n\n      function requestEthereumPrice(address _oracle, string _jobId)\n    public\n    onlyOwner\n  {\n    Chainlink.Request memory req = buildChainlinkRequest(stringToBytes32(_jobId), this, this.fulfill.selector); // edit\n    req.add(\"url\", \"https://min-api.cryptocompare.com/data/price?fsym=ETH&tsyms=USD\");\n    req.add(\"path\", \"USD\");\n    req.addInt(\"times\", 100);\n    sendChainlinkRequestTo(_oracle, req, 1*LINK);\n  }\n\n  function fulfill(bytes32 _requestId, uint256 _price)  // edit\n    public\n    recordChainlinkFulfillment(_requestId)\n  {\n    currentPrice = _price; //currentPrice var doesnät exist need action. C\n  }\n\n    function stringToBytes32(string memory source) private pure returns (bytes32 result) {\n    bytes memory tempEmptyStringTest = bytes(source);\n    if (tempEmptyStringTest.length == 0) {\n      return 0x0;\n    }\n\n    assembly {\n      result := mload(add(source, 32))\n    }\n  }\n\n\n}\n",
  "sourcePath": "/Users/saga/Documents/ETH New York/eth-new-york-2019/chainlink/contracts/DonationsManager.sol",
  "ast": {
    "absolutePath": "/Users/saga/Documents/ETH New York/eth-new-york-2019/chainlink/contracts/DonationsManager.sol",
    "exportedSymbols": {
      "DonationsManager": [
        339
      ]
    },
    "id": 340,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "34211:32:0"
      },
      {
        "absolutePath": "chainlink/contracts/ChainlinkClient.sol",
        "file": "chainlink/contracts/ChainlinkClient.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 340,
        "sourceUnit": 1556,
        "src": "34244:49:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 340,
        "sourceUnit": 3235,
        "src": "34294:63:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4,
              "name": "ChainlinkClient",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1555,
              "src": "34388:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ChainlinkClient_$1555",
                "typeString": "contract ChainlinkClient"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "34388:15:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3234,
              "src": "34405:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$3234",
                "typeString": "contract Ownable"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "34405:7:0"
          }
        ],
        "contractDependencies": [
          1555,
          3234
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 339,
        "linearizedBaseContracts": [
          339,
          3234,
          1555
        ],
        "name": "DonationsManager",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 15,
            "name": "UpdatedISP",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9,
                  "indexed": true,
                  "name": "isp",
                  "nodeType": "VariableDeclaration",
                  "scope": 15,
                  "src": "34446:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "34446:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11,
                  "indexed": true,
                  "name": "countryName",
                  "nodeType": "VariableDeclaration",
                  "scope": 15,
                  "src": "34474:27:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 10,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "34474:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13,
                  "indexed": true,
                  "name": "monthlyServiceCost",
                  "nodeType": "VariableDeclaration",
                  "scope": 15,
                  "src": "34509:31:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "34509:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "34438:108:0"
            },
            "src": "34422:125:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 25,
            "name": "DonationAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 24,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17,
                  "indexed": false,
                  "name": "countryName",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "34580:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "34580:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19,
                  "indexed": false,
                  "name": "donor",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "34607:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "34607:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "34629:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "34629:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23,
                  "indexed": false,
                  "name": "time",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "34649:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "34649:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "34572:92:0"
            },
            "src": "34553:112:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 33,
            "name": "WithdrawalISP",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27,
                  "indexed": false,
                  "name": "countryName",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "34698:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "34698:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29,
                  "indexed": false,
                  "name": "ISP",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "34725:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "34725:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "34745:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "34745:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "34690:72:0"
            },
            "src": "34671:92:0"
          },
          {
            "constant": false,
            "id": 35,
            "name": "_owner",
            "nodeType": "VariableDeclaration",
            "scope": 339,
            "src": "34769:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 34,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "34769:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 37,
            "name": "currentPrice",
            "nodeType": "VariableDeclaration",
            "scope": 339,
            "src": "34796:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 36,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "34796:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "canonicalName": "DonationsManager.Country",
            "id": 44,
            "members": [
              {
                "constant": false,
                "id": 39,
                "name": "currentISP",
                "nodeType": "VariableDeclaration",
                "scope": 44,
                "src": "34846:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 38,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "34846:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 41,
                "name": "balance",
                "nodeType": "VariableDeclaration",
                "scope": 44,
                "src": "34872:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 40,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "34872:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 43,
                "name": "monthlyServiceCost",
                "nodeType": "VariableDeclaration",
                "scope": 44,
                "src": "34892:23:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 42,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "34892:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Country",
            "nodeType": "StructDefinition",
            "scope": 339,
            "src": "34823:99:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 48,
            "name": "countries",
            "nodeType": "VariableDeclaration",
            "scope": 339,
            "src": "34927:45:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Country_$44_storage_$",
              "typeString": "mapping(bytes32 => struct DonationsManager.Country)"
            },
            "typeName": {
              "id": 47,
              "keyType": {
                "id": 45,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "34936:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "34927:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Country_$44_storage_$",
                "typeString": "mapping(bytes32 => struct DonationsManager.Country)"
              },
              "valueType": {
                "contractScope": null,
                "id": 46,
                "name": "Country",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 44,
                "src": "34947:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Country_$44_storage_ptr",
                  "typeString": "struct DonationsManager.Country"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "DonationsManager.Donation",
            "id": 57,
            "members": [
              {
                "constant": false,
                "id": 50,
                "name": "donor",
                "nodeType": "VariableDeclaration",
                "scope": 57,
                "src": "35003:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 49,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "35003:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 52,
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "scope": 57,
                "src": "35024:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 51,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "35024:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54,
                "name": "timestamp",
                "nodeType": "VariableDeclaration",
                "scope": 57,
                "src": "35043:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 53,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "35043:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 56,
                "name": "countryName",
                "nodeType": "VariableDeclaration",
                "scope": 57,
                "src": "35065:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 55,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "35065:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Donation",
            "nodeType": "StructDefinition",
            "scope": 339,
            "src": "34979:112:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 61,
            "name": "donations",
            "nodeType": "VariableDeclaration",
            "scope": 339,
            "src": "35097:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Donation_$57_storage_$",
              "typeString": "mapping(address => struct DonationsManager.Donation)"
            },
            "typeName": {
              "id": 60,
              "keyType": {
                "id": 58,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "35106:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "35097:29:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Donation_$57_storage_$",
                "typeString": "mapping(address => struct DonationsManager.Donation)"
              },
              "valueType": {
                "contractScope": null,
                "id": 59,
                "name": "Donation",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 57,
                "src": "35117:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Donation_$57_storage_ptr",
                  "typeString": "struct DonationsManager.Donation"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 77,
              "nodeType": "Block",
              "src": "35179:109:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 72,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 66,
                              "name": "countries",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48,
                              "src": "35197:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Country_$44_storage_$",
                                "typeString": "mapping(bytes32 => struct DonationsManager.Country storage ref)"
                              }
                            },
                            "id": 68,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 67,
                              "name": "name",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63,
                              "src": "35207:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "35197:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Country_$44_storage",
                              "typeString": "struct DonationsManager.Country storage ref"
                            }
                          },
                          "id": 69,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "currentISP",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39,
                          "src": "35197:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 70,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3552,
                            "src": "35227:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 71,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "35227:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "35197:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f74207468652049535020666f72207468697320636f756e747279",
                        "id": 73,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "35239:30:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5d322dd96527a22403f0880299a71a309324e3c17aca0c02083fbdee3e220de8",
                          "typeString": "literal_string \"not the ISP for this country\""
                        },
                        "value": "not the ISP for this country"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5d322dd96527a22403f0880299a71a309324e3c17aca0c02083fbdee3e220de8",
                          "typeString": "literal_string \"not the ISP for this country\""
                        }
                      ],
                      "id": 65,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3555,
                        3556
                      ],
                      "referencedDeclaration": 3556,
                      "src": "35189:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "35189:81:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75,
                  "nodeType": "ExpressionStatement",
                  "src": "35189:81:0"
                },
                {
                  "id": 76,
                  "nodeType": "PlaceholderStatement",
                  "src": "35280:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 78,
            "name": "isISP",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "35165:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "35165:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "35164:14:0"
            },
            "src": "35150:138:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 89,
              "nodeType": "Block",
              "src": "35314:70:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 84,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 81,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3552,
                            "src": "35332:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 82,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "35332:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 83,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35,
                          "src": "35346:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "35332:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f7420746865206f776e6572",
                        "id": 85,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "35354:15:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_09ee694bb6d0f66081e15dd53293c7f941705ae2fd8f9732918eb9f8e2ff3219",
                          "typeString": "literal_string \"not the owner\""
                        },
                        "value": "not the owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_09ee694bb6d0f66081e15dd53293c7f941705ae2fd8f9732918eb9f8e2ff3219",
                          "typeString": "literal_string \"not the owner\""
                        }
                      ],
                      "id": 80,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3555,
                        3556
                      ],
                      "referencedDeclaration": 3556,
                      "src": "35324:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "35324:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87,
                  "nodeType": "ExpressionStatement",
                  "src": "35324:46:0"
                },
                {
                  "id": 88,
                  "nodeType": "PlaceholderStatement",
                  "src": "35376:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 90,
            "name": "onlyOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "35311:2:0"
            },
            "src": "35293:91:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 101,
              "nodeType": "Block",
              "src": "35411:72:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 93,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "35421:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 94,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3552,
                        "src": "35430:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 95,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "35430:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "35421:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 97,
                  "nodeType": "ExpressionStatement",
                  "src": "35421:19:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 98,
                      "name": "setPublicChainlinkToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1360,
                      "src": "35450:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "35450:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "35450:25:0"
                }
              ]
            },
            "documentation": null,
            "id": 102,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "35401:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "35411:0:0"
            },
            "scope": 339,
            "src": "35390:93:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 133,
              "nodeType": "Block",
              "src": "35577:165:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 113,
                          "name": "countries",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "35587:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Country_$44_storage_$",
                            "typeString": "mapping(bytes32 => struct DonationsManager.Country storage ref)"
                          }
                        },
                        "id": 115,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 114,
                          "name": "country",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 106,
                          "src": "35597:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "35587:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Country_$44_storage",
                          "typeString": "struct DonationsManager.Country storage ref"
                        }
                      },
                      "id": 116,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "currentISP",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39,
                      "src": "35587:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 117,
                      "name": "isp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 104,
                      "src": "35619:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "35587:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 119,
                  "nodeType": "ExpressionStatement",
                  "src": "35587:35:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 120,
                          "name": "countries",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "35632:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Country_$44_storage_$",
                            "typeString": "mapping(bytes32 => struct DonationsManager.Country storage ref)"
                          }
                        },
                        "id": 122,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 121,
                          "name": "country",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 106,
                          "src": "35642:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "35632:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Country_$44_storage",
                          "typeString": "struct DonationsManager.Country storage ref"
                        }
                      },
                      "id": 123,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "monthlyServiceCost",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43,
                      "src": "35632:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 124,
                      "name": "serviceCost",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 108,
                      "src": "35672:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "35632:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "35632:51:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 128,
                        "name": "isp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104,
                        "src": "35709:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 129,
                        "name": "country",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 106,
                        "src": "35714:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 130,
                        "name": "serviceCost",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 108,
                        "src": "35723:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 127,
                      "name": "UpdatedISP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "35698:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$returns$__$",
                        "typeString": "function (address,bytes32,uint256)"
                      }
                    },
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "35698:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 132,
                  "nodeType": "EmitStatement",
                  "src": "35693:42:0"
                }
              ]
            },
            "documentation": null,
            "id": 134,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 111,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 110,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 90,
                  "src": "35567:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "35567:9:0"
              }
            ],
            "name": "updateISP",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104,
                  "name": "isp",
                  "nodeType": "VariableDeclaration",
                  "scope": 134,
                  "src": "35512:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "35512:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 106,
                  "name": "country",
                  "nodeType": "VariableDeclaration",
                  "scope": 134,
                  "src": "35525:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 105,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "35525:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 108,
                  "name": "serviceCost",
                  "nodeType": "VariableDeclaration",
                  "scope": 134,
                  "src": "35542:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 107,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "35542:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "35511:48:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "35577:0:0"
            },
            "scope": 339,
            "src": "35493:249:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 182,
              "nodeType": "Block",
              "src": "35798:284:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 139,
                          "name": "donations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61,
                          "src": "35808:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Donation_$57_storage_$",
                            "typeString": "mapping(address => struct DonationsManager.Donation storage ref)"
                          }
                        },
                        "id": 142,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 140,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3552,
                            "src": "35818:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "35818:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "35808:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Donation_$57_storage",
                          "typeString": "struct DonationsManager.Donation storage ref"
                        }
                      },
                      "id": 143,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "donor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50,
                      "src": "35808:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 144,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3552,
                        "src": "35838:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "35838:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "35808:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 147,
                  "nodeType": "ExpressionStatement",
                  "src": "35808:40:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 148,
                          "name": "donations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61,
                          "src": "35858:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Donation_$57_storage_$",
                            "typeString": "mapping(address => struct DonationsManager.Donation storage ref)"
                          }
                        },
                        "id": 151,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 149,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3552,
                            "src": "35868:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "35868:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "35858:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Donation_$57_storage",
                          "typeString": "struct DonationsManager.Donation storage ref"
                        }
                      },
                      "id": 152,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52,
                      "src": "35858:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 153,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3552,
                        "src": "35889:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "35889:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "35858:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 156,
                  "nodeType": "ExpressionStatement",
                  "src": "35858:40:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 157,
                          "name": "donations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61,
                          "src": "35908:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Donation_$57_storage_$",
                            "typeString": "mapping(address => struct DonationsManager.Donation storage ref)"
                          }
                        },
                        "id": 160,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 158,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3552,
                            "src": "35918:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "35918:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "35908:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Donation_$57_storage",
                          "typeString": "struct DonationsManager.Donation storage ref"
                        }
                      },
                      "id": 161,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "countryName",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56,
                      "src": "35908:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 162,
                      "name": "nameofCountry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 136,
                      "src": "35944:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "35908:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 164,
                  "nodeType": "ExpressionStatement",
                  "src": "35908:49:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 165,
                          "name": "donations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61,
                          "src": "35967:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Donation_$57_storage_$",
                            "typeString": "mapping(address => struct DonationsManager.Donation storage ref)"
                          }
                        },
                        "id": 168,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 166,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3552,
                            "src": "35977:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "35977:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "35967:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Donation_$57_storage",
                          "typeString": "struct DonationsManager.Donation storage ref"
                        }
                      },
                      "id": 169,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54,
                      "src": "35967:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 170,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3554,
                      "src": "36001:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "35967:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 172,
                  "nodeType": "ExpressionStatement",
                  "src": "35967:37:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 174,
                        "name": "nameofCountry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 136,
                        "src": "36033:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 175,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3552,
                          "src": "36048:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "36048:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 177,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3552,
                          "src": "36060:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "36060:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 179,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3554,
                        "src": "36071:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 173,
                      "name": "DonationAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "36019:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,address,uint256,uint256)"
                      }
                    },
                    "id": 180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "36019:56:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 181,
                  "nodeType": "EmitStatement",
                  "src": "36014:61:0"
                }
              ]
            },
            "documentation": null,
            "id": 183,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "addDonation",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 136,
                  "name": "nameofCountry",
                  "nodeType": "VariableDeclaration",
                  "scope": 183,
                  "src": "35768:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 135,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "35768:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "35767:23:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "35798:0:0"
            },
            "scope": 339,
            "src": "35747:335:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 246,
              "nodeType": "Block",
              "src": "36152:497:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 192,
                              "name": "countries",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48,
                              "src": "36170:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Country_$44_storage_$",
                                "typeString": "mapping(bytes32 => struct DonationsManager.Country storage ref)"
                              }
                            },
                            "id": 194,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 193,
                              "name": "countryName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 185,
                              "src": "36180:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "36170:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Country_$44_storage",
                              "typeString": "struct DonationsManager.Country storage ref"
                            }
                          },
                          "id": 195,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "currentISP",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39,
                          "src": "36170:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 196,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3552,
                            "src": "36207:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "36207:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "36170:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f74207468652049535020666f72207468697320636f756e747279",
                        "id": 199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "36219:30:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5d322dd96527a22403f0880299a71a309324e3c17aca0c02083fbdee3e220de8",
                          "typeString": "literal_string \"not the ISP for this country\""
                        },
                        "value": "not the ISP for this country"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5d322dd96527a22403f0880299a71a309324e3c17aca0c02083fbdee3e220de8",
                          "typeString": "literal_string \"not the ISP for this country\""
                        }
                      ],
                      "id": 191,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3555,
                        3556
                      ],
                      "referencedDeclaration": 3556,
                      "src": "36162:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "36162:88:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 201,
                  "nodeType": "ExpressionStatement",
                  "src": "36162:88:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 203,
                              "name": "countries",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48,
                              "src": "36268:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Country_$44_storage_$",
                                "typeString": "mapping(bytes32 => struct DonationsManager.Country storage ref)"
                              }
                            },
                            "id": 205,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 204,
                              "name": "countryName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 185,
                              "src": "36278:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "36268:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Country_$44_storage",
                              "typeString": "struct DonationsManager.Country storage ref"
                            }
                          },
                          "id": 206,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41,
                          "src": "36268:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 207,
                              "name": "countries",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48,
                              "src": "36302:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Country_$44_storage_$",
                                "typeString": "mapping(bytes32 => struct DonationsManager.Country storage ref)"
                              }
                            },
                            "id": 209,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 208,
                              "name": "countryName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 185,
                              "src": "36312:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "36302:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Country_$44_storage",
                              "typeString": "struct DonationsManager.Country storage ref"
                            }
                          },
                          "id": 210,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "monthlyServiceCost",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43,
                          "src": "36302:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "36268:75:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f7420656e6f7567682066756e64696e6720666f7220636f766572206d6f6e74686c7920636f7374",
                        "id": 212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "36345:43:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ff4b96b42fd44203f8ebca33570743346da5cb098f2c0e7b412a071f695fd46c",
                          "typeString": "literal_string \"not enough funding for cover monthly cost\""
                        },
                        "value": "not enough funding for cover monthly cost"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ff4b96b42fd44203f8ebca33570743346da5cb098f2c0e7b412a071f695fd46c",
                          "typeString": "literal_string \"not enough funding for cover monthly cost\""
                        }
                      ],
                      "id": 202,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3555,
                        3556
                      ],
                      "referencedDeclaration": 3556,
                      "src": "36260:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "36260:129:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 214,
                  "nodeType": "ExpressionStatement",
                  "src": "36260:129:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 215,
                          "name": "countries",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "36399:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Country_$44_storage_$",
                            "typeString": "mapping(bytes32 => struct DonationsManager.Country storage ref)"
                          }
                        },
                        "id": 217,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 216,
                          "name": "countryName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 185,
                          "src": "36409:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "36399:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Country_$44_storage",
                          "typeString": "struct DonationsManager.Country storage ref"
                        }
                      },
                      "id": 218,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41,
                      "src": "36399:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 219,
                          "name": "countries",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "36433:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Country_$44_storage_$",
                            "typeString": "mapping(bytes32 => struct DonationsManager.Country storage ref)"
                          }
                        },
                        "id": 221,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 220,
                          "name": "countryName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 185,
                          "src": "36443:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "36433:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Country_$44_storage",
                          "typeString": "struct DonationsManager.Country storage ref"
                        }
                      },
                      "id": 222,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "monthlyServiceCost",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43,
                      "src": "36433:41:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "36399:75:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 224,
                  "nodeType": "ExpressionStatement",
                  "src": "36399:75:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 230,
                            "name": "countries",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48,
                            "src": "36504:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Country_$44_storage_$",
                              "typeString": "mapping(bytes32 => struct DonationsManager.Country storage ref)"
                            }
                          },
                          "id": 232,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 231,
                            "name": "countryName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 185,
                            "src": "36514:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "36504:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Country_$44_storage",
                            "typeString": "struct DonationsManager.Country storage ref"
                          }
                        },
                        "id": 233,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "monthlyServiceCost",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43,
                        "src": "36504:41:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 225,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3552,
                          "src": "36484:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "36484:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "36484:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "36484:62:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 235,
                  "nodeType": "ExpressionStatement",
                  "src": "36484:62:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 237,
                        "name": "countryName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 185,
                        "src": "36575:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 238,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3552,
                          "src": "36588:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "36588:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 240,
                            "name": "countries",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48,
                            "src": "36600:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Country_$44_storage_$",
                              "typeString": "mapping(bytes32 => struct DonationsManager.Country storage ref)"
                            }
                          },
                          "id": 242,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 241,
                            "name": "countryName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 185,
                            "src": "36610:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "36600:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Country_$44_storage",
                            "typeString": "struct DonationsManager.Country storage ref"
                          }
                        },
                        "id": 243,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "monthlyServiceCost",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43,
                        "src": "36600:41:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 236,
                      "name": "WithdrawalISP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "36561:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,address,uint256)"
                      }
                    },
                    "id": 244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "36561:81:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 245,
                  "nodeType": "EmitStatement",
                  "src": "36556:86:0"
                }
              ]
            },
            "documentation": null,
            "id": 247,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 188,
                    "name": "countryName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 185,
                    "src": "36139:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 189,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 187,
                  "name": "isISP",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 78,
                  "src": "36133:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "36133:18:0"
              }
            ],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 186,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 185,
                  "name": "countryName",
                  "nodeType": "VariableDeclaration",
                  "scope": 247,
                  "src": "36105:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 184,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "36105:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "36104:21:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 190,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "36152:0:0"
            },
            "scope": 339,
            "src": "36087:562:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 299,
              "nodeType": "Block",
              "src": "36746:320:0",
              "statements": [
                {
                  "assignments": [
                    259
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 259,
                      "name": "req",
                      "nodeType": "VariableDeclaration",
                      "scope": 300,
                      "src": "36752:28:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$893_memory_ptr",
                        "typeString": "struct Chainlink.Request"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 258,
                        "name": "Chainlink.Request",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 893,
                        "src": "36752:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$893_storage_ptr",
                          "typeString": "struct Chainlink.Request"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 269,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 262,
                            "name": "_jobId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 251,
                            "src": "36821:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 261,
                          "name": "stringToBytes32",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 338,
                          "src": "36805:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (string memory) pure returns (bytes32)"
                          }
                        },
                        "id": 263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "36805:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 264,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3587,
                        "src": "36830:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DonationsManager_$339",
                          "typeString": "contract DonationsManager"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 265,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3587,
                            "src": "36836:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DonationsManager_$339",
                              "typeString": "contract DonationsManager"
                            }
                          },
                          "id": 266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "fulfill",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 315,
                          "src": "36836:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
                            "typeString": "function (bytes32,uint256) external"
                          }
                        },
                        "id": 267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "36836:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_contract$_DonationsManager_$339",
                          "typeString": "contract DonationsManager"
                        },
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 260,
                      "name": "buildChainlinkRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1214,
                      "src": "36783:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_address_$_t_bytes4_$returns$_t_struct$_Request_$893_memory_ptr_$",
                        "typeString": "function (bytes32,address,bytes4) pure returns (struct Chainlink.Request memory)"
                      }
                    },
                    "id": 268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "36783:75:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$893_memory_ptr",
                      "typeString": "struct Chainlink.Request memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "36752:106:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "75726c",
                        "id": 273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "36880:5:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b68b5f5089998f2978a1dcc681e8ef27962b90d5c26c4c0b9c1945814ffa5ef0",
                          "typeString": "literal_string \"url\""
                        },
                        "value": "url"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "68747470733a2f2f6d696e2d6170692e63727970746f636f6d706172652e636f6d2f646174612f70726963653f6673796d3d455448267473796d733d555344",
                        "id": 274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "36887:65:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_444739292f65e0d84586af555ca805e0303948242aa5bbf9a7032603676a8ec3",
                          "typeString": "literal_string \"https://min-api.cryptocompare.com/data/price?fsym=ETH&tsyms=USD\""
                        },
                        "value": "https://min-api.cryptocompare.com/data/price?fsym=ETH&tsyms=USD"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_b68b5f5089998f2978a1dcc681e8ef27962b90d5c26c4c0b9c1945814ffa5ef0",
                          "typeString": "literal_string \"url\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_444739292f65e0d84586af555ca805e0303948242aa5bbf9a7032603676a8ec3",
                          "typeString": "literal_string \"https://min-api.cryptocompare.com/data/price?fsym=ETH&tsyms=USD\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 270,
                        "name": "req",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 259,
                        "src": "36872:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$893_memory_ptr",
                          "typeString": "struct Chainlink.Request memory"
                        }
                      },
                      "id": 272,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 986,
                      "src": "36872:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Request_$893_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_Request_$893_memory_ptr_$",
                        "typeString": "function (struct Chainlink.Request memory,string memory,string memory) pure"
                      }
                    },
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "36872:81:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 276,
                  "nodeType": "ExpressionStatement",
                  "src": "36872:81:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "70617468",
                        "id": 280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "36967:6:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_46f9db2921f88204395f1f47d741736216b2218e88e47f50e1f1b56261f0d0cd",
                          "typeString": "literal_string \"path\""
                        },
                        "value": "path"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "555344",
                        "id": 281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "36975:5:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c4ae21aac0c6549d71dd96035b7e0bdb6c79ebdba8891b666115bc976d16a29e",
                          "typeString": "literal_string \"USD\""
                        },
                        "value": "USD"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_46f9db2921f88204395f1f47d741736216b2218e88e47f50e1f1b56261f0d0cd",
                          "typeString": "literal_string \"path\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c4ae21aac0c6549d71dd96035b7e0bdb6c79ebdba8891b666115bc976d16a29e",
                          "typeString": "literal_string \"USD\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 277,
                        "name": "req",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 259,
                        "src": "36959:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$893_memory_ptr",
                          "typeString": "struct Chainlink.Request memory"
                        }
                      },
                      "id": 279,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 986,
                      "src": "36959:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Request_$893_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_Request_$893_memory_ptr_$",
                        "typeString": "function (struct Chainlink.Request memory,string memory,string memory) pure"
                      }
                    },
                    "id": 282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "36959:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 283,
                  "nodeType": "ExpressionStatement",
                  "src": "36959:22:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "74696d6573",
                        "id": 287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "36998:7:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0bfab8028df7ddaceaf0a173b093c1269c5dd964bbe8cc0c6b210e554970802b",
                          "typeString": "literal_string \"times\""
                        },
                        "value": "times"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "313030",
                        "id": 288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "37007:3:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_0bfab8028df7ddaceaf0a173b093c1269c5dd964bbe8cc0c6b210e554970802b",
                          "typeString": "literal_string \"times\""
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 284,
                        "name": "req",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 259,
                        "src": "36987:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$893_memory_ptr",
                          "typeString": "struct Chainlink.Request memory"
                        }
                      },
                      "id": 286,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addInt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1038,
                      "src": "36987:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Request_$893_memory_ptr_$_t_string_memory_ptr_$_t_int256_$returns$__$bound_to$_t_struct$_Request_$893_memory_ptr_$",
                        "typeString": "function (struct Chainlink.Request memory,string memory,int256) pure"
                      }
                    },
                    "id": 289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "36987:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 290,
                  "nodeType": "ExpressionStatement",
                  "src": "36987:24:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 292,
                        "name": "_oracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 249,
                        "src": "37040:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 293,
                        "name": "req",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 259,
                        "src": "37049:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$893_memory_ptr",
                          "typeString": "struct Chainlink.Request memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "37054:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 295,
                          "name": "LINK",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1141,
                          "src": "37056:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "37054:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_Request_$893_memory_ptr",
                          "typeString": "struct Chainlink.Request memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 291,
                      "name": "sendChainlinkRequestTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1286,
                      "src": "37017:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_Request_$893_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (address,struct Chainlink.Request memory,uint256) returns (bytes32)"
                      }
                    },
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "37017:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 298,
                  "nodeType": "ExpressionStatement",
                  "src": "37017:44:0"
                }
              ]
            },
            "documentation": null,
            "id": 300,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 254,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 253,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 90,
                  "src": "36734:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "36734:9:0"
              }
            ],
            "name": "requestEthereumPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 249,
                  "name": "_oracle",
                  "nodeType": "VariableDeclaration",
                  "scope": 300,
                  "src": "36687:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 248,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "36687:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 251,
                  "name": "_jobId",
                  "nodeType": "VariableDeclaration",
                  "scope": 300,
                  "src": "36704:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 250,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "36704:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "36686:32:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 255,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "36746:0:0"
            },
            "scope": 339,
            "src": "36657:409:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 314,
              "nodeType": "Block",
              "src": "37188:81:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 310,
                      "name": "currentPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "37194:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 311,
                      "name": "_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 304,
                      "src": "37209:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "37194:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 313,
                  "nodeType": "ExpressionStatement",
                  "src": "37194:21:0"
                }
              ]
            },
            "documentation": null,
            "id": 315,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 307,
                    "name": "_requestId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 302,
                    "src": "37174:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 308,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 306,
                  "name": "recordChainlinkFulfillment",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1537,
                  "src": "37147:26:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "37147:38:0"
              }
            ],
            "name": "fulfill",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 305,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 302,
                  "name": "_requestId",
                  "nodeType": "VariableDeclaration",
                  "scope": 315,
                  "src": "37087:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 301,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "37087:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 304,
                  "name": "_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 315,
                  "src": "37107:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 303,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "37107:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "37086:36:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 309,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "37188:0:0"
            },
            "scope": 339,
            "src": "37070:199:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 337,
              "nodeType": "Block",
              "src": "37360:187:0",
              "statements": [
                {
                  "assignments": [
                    323
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 323,
                      "name": "tempEmptyStringTest",
                      "nodeType": "VariableDeclaration",
                      "scope": 338,
                      "src": "37366:32:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 322,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "37366:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 327,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 325,
                        "name": "source",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 317,
                        "src": "37407:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 324,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "37401:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                        "typeString": "type(bytes storage pointer)"
                      },
                      "typeName": "bytes"
                    },
                    "id": 326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "37401:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "37366:48:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 328,
                        "name": "tempEmptyStringTest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 323,
                        "src": "37424:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "37424:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 330,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "37454:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "37424:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 335,
                  "nodeType": "IfStatement",
                  "src": "37420:62:0",
                  "trueBody": {
                    "id": 334,
                    "nodeType": "Block",
                    "src": "37457:25:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "307830",
                          "id": 332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "37472:3:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x0"
                        },
                        "functionReturnParameters": 321,
                        "id": 333,
                        "nodeType": "Return",
                        "src": "37465:10:0"
                      }
                    ]
                  }
                },
                {
                  "externalReferences": [
                    {
                      "source": {
                        "declaration": 317,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "37525:6:0",
                        "valueSize": 1
                      }
                    },
                    {
                      "result": {
                        "declaration": 320,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "37505:6:0",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 336,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    result := mload(add(source, 32))\n}",
                  "src": "37488:59:0"
                }
              ]
            },
            "documentation": null,
            "id": 338,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "stringToBytes32",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 318,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 317,
                  "name": "source",
                  "nodeType": "VariableDeclaration",
                  "scope": 338,
                  "src": "37300:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 316,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "37300:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "37299:22:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 321,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 320,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 338,
                  "src": "37344:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 319,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "37344:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "37343:16:0"
            },
            "scope": 339,
            "src": "37275:272:0",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "private"
          }
        ],
        "scope": 340,
        "src": "34359:3192:0"
      }
    ],
    "src": "34211:3341:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/saga/Documents/ETH New York/eth-new-york-2019/chainlink/contracts/DonationsManager.sol",
    "exportedSymbols": {
      "DonationsManager": [
        339
      ]
    },
    "id": 340,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "34211:32:0"
      },
      {
        "absolutePath": "chainlink/contracts/ChainlinkClient.sol",
        "file": "chainlink/contracts/ChainlinkClient.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 340,
        "sourceUnit": 1556,
        "src": "34244:49:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 340,
        "sourceUnit": 3235,
        "src": "34294:63:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4,
              "name": "ChainlinkClient",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1555,
              "src": "34388:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ChainlinkClient_$1555",
                "typeString": "contract ChainlinkClient"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "34388:15:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3234,
              "src": "34405:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$3234",
                "typeString": "contract Ownable"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "34405:7:0"
          }
        ],
        "contractDependencies": [
          1555,
          3234
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 339,
        "linearizedBaseContracts": [
          339,
          3234,
          1555
        ],
        "name": "DonationsManager",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 15,
            "name": "UpdatedISP",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9,
                  "indexed": true,
                  "name": "isp",
                  "nodeType": "VariableDeclaration",
                  "scope": 15,
                  "src": "34446:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "34446:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11,
                  "indexed": true,
                  "name": "countryName",
                  "nodeType": "VariableDeclaration",
                  "scope": 15,
                  "src": "34474:27:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 10,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "34474:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13,
                  "indexed": true,
                  "name": "monthlyServiceCost",
                  "nodeType": "VariableDeclaration",
                  "scope": 15,
                  "src": "34509:31:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "34509:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "34438:108:0"
            },
            "src": "34422:125:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 25,
            "name": "DonationAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 24,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17,
                  "indexed": false,
                  "name": "countryName",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "34580:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "34580:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19,
                  "indexed": false,
                  "name": "donor",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "34607:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "34607:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "34629:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "34629:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23,
                  "indexed": false,
                  "name": "time",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "34649:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "34649:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "34572:92:0"
            },
            "src": "34553:112:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 33,
            "name": "WithdrawalISP",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27,
                  "indexed": false,
                  "name": "countryName",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "34698:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "34698:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29,
                  "indexed": false,
                  "name": "ISP",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "34725:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "34725:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "34745:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "34745:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "34690:72:0"
            },
            "src": "34671:92:0"
          },
          {
            "constant": false,
            "id": 35,
            "name": "_owner",
            "nodeType": "VariableDeclaration",
            "scope": 339,
            "src": "34769:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 34,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "34769:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 37,
            "name": "currentPrice",
            "nodeType": "VariableDeclaration",
            "scope": 339,
            "src": "34796:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 36,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "34796:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "canonicalName": "DonationsManager.Country",
            "id": 44,
            "members": [
              {
                "constant": false,
                "id": 39,
                "name": "currentISP",
                "nodeType": "VariableDeclaration",
                "scope": 44,
                "src": "34846:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 38,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "34846:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 41,
                "name": "balance",
                "nodeType": "VariableDeclaration",
                "scope": 44,
                "src": "34872:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 40,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "34872:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 43,
                "name": "monthlyServiceCost",
                "nodeType": "VariableDeclaration",
                "scope": 44,
                "src": "34892:23:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 42,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "34892:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Country",
            "nodeType": "StructDefinition",
            "scope": 339,
            "src": "34823:99:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 48,
            "name": "countries",
            "nodeType": "VariableDeclaration",
            "scope": 339,
            "src": "34927:45:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Country_$44_storage_$",
              "typeString": "mapping(bytes32 => struct DonationsManager.Country)"
            },
            "typeName": {
              "id": 47,
              "keyType": {
                "id": 45,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "34936:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "34927:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Country_$44_storage_$",
                "typeString": "mapping(bytes32 => struct DonationsManager.Country)"
              },
              "valueType": {
                "contractScope": null,
                "id": 46,
                "name": "Country",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 44,
                "src": "34947:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Country_$44_storage_ptr",
                  "typeString": "struct DonationsManager.Country"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "DonationsManager.Donation",
            "id": 57,
            "members": [
              {
                "constant": false,
                "id": 50,
                "name": "donor",
                "nodeType": "VariableDeclaration",
                "scope": 57,
                "src": "35003:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 49,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "35003:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 52,
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "scope": 57,
                "src": "35024:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 51,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "35024:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54,
                "name": "timestamp",
                "nodeType": "VariableDeclaration",
                "scope": 57,
                "src": "35043:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 53,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "35043:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 56,
                "name": "countryName",
                "nodeType": "VariableDeclaration",
                "scope": 57,
                "src": "35065:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 55,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "35065:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Donation",
            "nodeType": "StructDefinition",
            "scope": 339,
            "src": "34979:112:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 61,
            "name": "donations",
            "nodeType": "VariableDeclaration",
            "scope": 339,
            "src": "35097:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Donation_$57_storage_$",
              "typeString": "mapping(address => struct DonationsManager.Donation)"
            },
            "typeName": {
              "id": 60,
              "keyType": {
                "id": 58,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "35106:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "35097:29:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Donation_$57_storage_$",
                "typeString": "mapping(address => struct DonationsManager.Donation)"
              },
              "valueType": {
                "contractScope": null,
                "id": 59,
                "name": "Donation",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 57,
                "src": "35117:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Donation_$57_storage_ptr",
                  "typeString": "struct DonationsManager.Donation"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 77,
              "nodeType": "Block",
              "src": "35179:109:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 72,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 66,
                              "name": "countries",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48,
                              "src": "35197:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Country_$44_storage_$",
                                "typeString": "mapping(bytes32 => struct DonationsManager.Country storage ref)"
                              }
                            },
                            "id": 68,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 67,
                              "name": "name",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63,
                              "src": "35207:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "35197:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Country_$44_storage",
                              "typeString": "struct DonationsManager.Country storage ref"
                            }
                          },
                          "id": 69,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "currentISP",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39,
                          "src": "35197:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 70,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3552,
                            "src": "35227:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 71,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "35227:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "35197:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f74207468652049535020666f72207468697320636f756e747279",
                        "id": 73,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "35239:30:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5d322dd96527a22403f0880299a71a309324e3c17aca0c02083fbdee3e220de8",
                          "typeString": "literal_string \"not the ISP for this country\""
                        },
                        "value": "not the ISP for this country"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5d322dd96527a22403f0880299a71a309324e3c17aca0c02083fbdee3e220de8",
                          "typeString": "literal_string \"not the ISP for this country\""
                        }
                      ],
                      "id": 65,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3555,
                        3556
                      ],
                      "referencedDeclaration": 3556,
                      "src": "35189:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "35189:81:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75,
                  "nodeType": "ExpressionStatement",
                  "src": "35189:81:0"
                },
                {
                  "id": 76,
                  "nodeType": "PlaceholderStatement",
                  "src": "35280:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 78,
            "name": "isISP",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "35165:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "35165:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "35164:14:0"
            },
            "src": "35150:138:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 89,
              "nodeType": "Block",
              "src": "35314:70:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 84,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 81,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3552,
                            "src": "35332:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 82,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "35332:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 83,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35,
                          "src": "35346:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "35332:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f7420746865206f776e6572",
                        "id": 85,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "35354:15:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_09ee694bb6d0f66081e15dd53293c7f941705ae2fd8f9732918eb9f8e2ff3219",
                          "typeString": "literal_string \"not the owner\""
                        },
                        "value": "not the owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_09ee694bb6d0f66081e15dd53293c7f941705ae2fd8f9732918eb9f8e2ff3219",
                          "typeString": "literal_string \"not the owner\""
                        }
                      ],
                      "id": 80,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3555,
                        3556
                      ],
                      "referencedDeclaration": 3556,
                      "src": "35324:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "35324:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87,
                  "nodeType": "ExpressionStatement",
                  "src": "35324:46:0"
                },
                {
                  "id": 88,
                  "nodeType": "PlaceholderStatement",
                  "src": "35376:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 90,
            "name": "onlyOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "35311:2:0"
            },
            "src": "35293:91:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 101,
              "nodeType": "Block",
              "src": "35411:72:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 93,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "35421:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 94,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3552,
                        "src": "35430:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 95,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "35430:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "35421:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 97,
                  "nodeType": "ExpressionStatement",
                  "src": "35421:19:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 98,
                      "name": "setPublicChainlinkToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1360,
                      "src": "35450:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "35450:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "35450:25:0"
                }
              ]
            },
            "documentation": null,
            "id": 102,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "35401:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "35411:0:0"
            },
            "scope": 339,
            "src": "35390:93:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 133,
              "nodeType": "Block",
              "src": "35577:165:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 113,
                          "name": "countries",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "35587:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Country_$44_storage_$",
                            "typeString": "mapping(bytes32 => struct DonationsManager.Country storage ref)"
                          }
                        },
                        "id": 115,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 114,
                          "name": "country",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 106,
                          "src": "35597:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "35587:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Country_$44_storage",
                          "typeString": "struct DonationsManager.Country storage ref"
                        }
                      },
                      "id": 116,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "currentISP",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39,
                      "src": "35587:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 117,
                      "name": "isp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 104,
                      "src": "35619:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "35587:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 119,
                  "nodeType": "ExpressionStatement",
                  "src": "35587:35:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 120,
                          "name": "countries",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "35632:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Country_$44_storage_$",
                            "typeString": "mapping(bytes32 => struct DonationsManager.Country storage ref)"
                          }
                        },
                        "id": 122,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 121,
                          "name": "country",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 106,
                          "src": "35642:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "35632:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Country_$44_storage",
                          "typeString": "struct DonationsManager.Country storage ref"
                        }
                      },
                      "id": 123,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "monthlyServiceCost",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43,
                      "src": "35632:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 124,
                      "name": "serviceCost",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 108,
                      "src": "35672:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "35632:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "35632:51:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 128,
                        "name": "isp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104,
                        "src": "35709:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 129,
                        "name": "country",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 106,
                        "src": "35714:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 130,
                        "name": "serviceCost",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 108,
                        "src": "35723:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 127,
                      "name": "UpdatedISP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "35698:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$returns$__$",
                        "typeString": "function (address,bytes32,uint256)"
                      }
                    },
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "35698:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 132,
                  "nodeType": "EmitStatement",
                  "src": "35693:42:0"
                }
              ]
            },
            "documentation": null,
            "id": 134,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 111,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 110,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 90,
                  "src": "35567:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "35567:9:0"
              }
            ],
            "name": "updateISP",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104,
                  "name": "isp",
                  "nodeType": "VariableDeclaration",
                  "scope": 134,
                  "src": "35512:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "35512:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 106,
                  "name": "country",
                  "nodeType": "VariableDeclaration",
                  "scope": 134,
                  "src": "35525:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 105,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "35525:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 108,
                  "name": "serviceCost",
                  "nodeType": "VariableDeclaration",
                  "scope": 134,
                  "src": "35542:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 107,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "35542:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "35511:48:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "35577:0:0"
            },
            "scope": 339,
            "src": "35493:249:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 182,
              "nodeType": "Block",
              "src": "35798:284:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 139,
                          "name": "donations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61,
                          "src": "35808:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Donation_$57_storage_$",
                            "typeString": "mapping(address => struct DonationsManager.Donation storage ref)"
                          }
                        },
                        "id": 142,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 140,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3552,
                            "src": "35818:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "35818:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "35808:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Donation_$57_storage",
                          "typeString": "struct DonationsManager.Donation storage ref"
                        }
                      },
                      "id": 143,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "donor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50,
                      "src": "35808:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 144,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3552,
                        "src": "35838:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "35838:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "35808:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 147,
                  "nodeType": "ExpressionStatement",
                  "src": "35808:40:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 148,
                          "name": "donations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61,
                          "src": "35858:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Donation_$57_storage_$",
                            "typeString": "mapping(address => struct DonationsManager.Donation storage ref)"
                          }
                        },
                        "id": 151,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 149,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3552,
                            "src": "35868:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "35868:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "35858:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Donation_$57_storage",
                          "typeString": "struct DonationsManager.Donation storage ref"
                        }
                      },
                      "id": 152,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52,
                      "src": "35858:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 153,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3552,
                        "src": "35889:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "35889:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "35858:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 156,
                  "nodeType": "ExpressionStatement",
                  "src": "35858:40:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 157,
                          "name": "donations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61,
                          "src": "35908:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Donation_$57_storage_$",
                            "typeString": "mapping(address => struct DonationsManager.Donation storage ref)"
                          }
                        },
                        "id": 160,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 158,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3552,
                            "src": "35918:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "35918:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "35908:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Donation_$57_storage",
                          "typeString": "struct DonationsManager.Donation storage ref"
                        }
                      },
                      "id": 161,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "countryName",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56,
                      "src": "35908:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 162,
                      "name": "nameofCountry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 136,
                      "src": "35944:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "35908:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 164,
                  "nodeType": "ExpressionStatement",
                  "src": "35908:49:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 165,
                          "name": "donations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61,
                          "src": "35967:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Donation_$57_storage_$",
                            "typeString": "mapping(address => struct DonationsManager.Donation storage ref)"
                          }
                        },
                        "id": 168,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 166,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3552,
                            "src": "35977:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "35977:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "35967:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Donation_$57_storage",
                          "typeString": "struct DonationsManager.Donation storage ref"
                        }
                      },
                      "id": 169,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54,
                      "src": "35967:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 170,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3554,
                      "src": "36001:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "35967:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 172,
                  "nodeType": "ExpressionStatement",
                  "src": "35967:37:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 174,
                        "name": "nameofCountry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 136,
                        "src": "36033:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 175,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3552,
                          "src": "36048:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "36048:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 177,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3552,
                          "src": "36060:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "36060:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 179,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3554,
                        "src": "36071:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 173,
                      "name": "DonationAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "36019:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,address,uint256,uint256)"
                      }
                    },
                    "id": 180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "36019:56:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 181,
                  "nodeType": "EmitStatement",
                  "src": "36014:61:0"
                }
              ]
            },
            "documentation": null,
            "id": 183,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "addDonation",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 136,
                  "name": "nameofCountry",
                  "nodeType": "VariableDeclaration",
                  "scope": 183,
                  "src": "35768:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 135,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "35768:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "35767:23:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "35798:0:0"
            },
            "scope": 339,
            "src": "35747:335:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 246,
              "nodeType": "Block",
              "src": "36152:497:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 192,
                              "name": "countries",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48,
                              "src": "36170:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Country_$44_storage_$",
                                "typeString": "mapping(bytes32 => struct DonationsManager.Country storage ref)"
                              }
                            },
                            "id": 194,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 193,
                              "name": "countryName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 185,
                              "src": "36180:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "36170:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Country_$44_storage",
                              "typeString": "struct DonationsManager.Country storage ref"
                            }
                          },
                          "id": 195,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "currentISP",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39,
                          "src": "36170:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 196,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3552,
                            "src": "36207:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "36207:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "36170:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f74207468652049535020666f72207468697320636f756e747279",
                        "id": 199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "36219:30:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5d322dd96527a22403f0880299a71a309324e3c17aca0c02083fbdee3e220de8",
                          "typeString": "literal_string \"not the ISP for this country\""
                        },
                        "value": "not the ISP for this country"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5d322dd96527a22403f0880299a71a309324e3c17aca0c02083fbdee3e220de8",
                          "typeString": "literal_string \"not the ISP for this country\""
                        }
                      ],
                      "id": 191,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3555,
                        3556
                      ],
                      "referencedDeclaration": 3556,
                      "src": "36162:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "36162:88:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 201,
                  "nodeType": "ExpressionStatement",
                  "src": "36162:88:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 203,
                              "name": "countries",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48,
                              "src": "36268:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Country_$44_storage_$",
                                "typeString": "mapping(bytes32 => struct DonationsManager.Country storage ref)"
                              }
                            },
                            "id": 205,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 204,
                              "name": "countryName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 185,
                              "src": "36278:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "36268:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Country_$44_storage",
                              "typeString": "struct DonationsManager.Country storage ref"
                            }
                          },
                          "id": 206,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41,
                          "src": "36268:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 207,
                              "name": "countries",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48,
                              "src": "36302:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Country_$44_storage_$",
                                "typeString": "mapping(bytes32 => struct DonationsManager.Country storage ref)"
                              }
                            },
                            "id": 209,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 208,
                              "name": "countryName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 185,
                              "src": "36312:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "36302:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Country_$44_storage",
                              "typeString": "struct DonationsManager.Country storage ref"
                            }
                          },
                          "id": 210,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "monthlyServiceCost",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43,
                          "src": "36302:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "36268:75:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f7420656e6f7567682066756e64696e6720666f7220636f766572206d6f6e74686c7920636f7374",
                        "id": 212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "36345:43:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ff4b96b42fd44203f8ebca33570743346da5cb098f2c0e7b412a071f695fd46c",
                          "typeString": "literal_string \"not enough funding for cover monthly cost\""
                        },
                        "value": "not enough funding for cover monthly cost"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ff4b96b42fd44203f8ebca33570743346da5cb098f2c0e7b412a071f695fd46c",
                          "typeString": "literal_string \"not enough funding for cover monthly cost\""
                        }
                      ],
                      "id": 202,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3555,
                        3556
                      ],
                      "referencedDeclaration": 3556,
                      "src": "36260:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "36260:129:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 214,
                  "nodeType": "ExpressionStatement",
                  "src": "36260:129:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 215,
                          "name": "countries",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "36399:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Country_$44_storage_$",
                            "typeString": "mapping(bytes32 => struct DonationsManager.Country storage ref)"
                          }
                        },
                        "id": 217,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 216,
                          "name": "countryName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 185,
                          "src": "36409:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "36399:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Country_$44_storage",
                          "typeString": "struct DonationsManager.Country storage ref"
                        }
                      },
                      "id": 218,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41,
                      "src": "36399:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 219,
                          "name": "countries",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "36433:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Country_$44_storage_$",
                            "typeString": "mapping(bytes32 => struct DonationsManager.Country storage ref)"
                          }
                        },
                        "id": 221,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 220,
                          "name": "countryName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 185,
                          "src": "36443:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "36433:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Country_$44_storage",
                          "typeString": "struct DonationsManager.Country storage ref"
                        }
                      },
                      "id": 222,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "monthlyServiceCost",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43,
                      "src": "36433:41:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "36399:75:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 224,
                  "nodeType": "ExpressionStatement",
                  "src": "36399:75:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 230,
                            "name": "countries",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48,
                            "src": "36504:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Country_$44_storage_$",
                              "typeString": "mapping(bytes32 => struct DonationsManager.Country storage ref)"
                            }
                          },
                          "id": 232,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 231,
                            "name": "countryName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 185,
                            "src": "36514:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "36504:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Country_$44_storage",
                            "typeString": "struct DonationsManager.Country storage ref"
                          }
                        },
                        "id": 233,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "monthlyServiceCost",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43,
                        "src": "36504:41:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 225,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3552,
                          "src": "36484:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "36484:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "36484:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "36484:62:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 235,
                  "nodeType": "ExpressionStatement",
                  "src": "36484:62:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 237,
                        "name": "countryName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 185,
                        "src": "36575:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 238,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3552,
                          "src": "36588:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "36588:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 240,
                            "name": "countries",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48,
                            "src": "36600:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Country_$44_storage_$",
                              "typeString": "mapping(bytes32 => struct DonationsManager.Country storage ref)"
                            }
                          },
                          "id": 242,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 241,
                            "name": "countryName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 185,
                            "src": "36610:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "36600:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Country_$44_storage",
                            "typeString": "struct DonationsManager.Country storage ref"
                          }
                        },
                        "id": 243,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "monthlyServiceCost",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43,
                        "src": "36600:41:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 236,
                      "name": "WithdrawalISP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "36561:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,address,uint256)"
                      }
                    },
                    "id": 244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "36561:81:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 245,
                  "nodeType": "EmitStatement",
                  "src": "36556:86:0"
                }
              ]
            },
            "documentation": null,
            "id": 247,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 188,
                    "name": "countryName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 185,
                    "src": "36139:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 189,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 187,
                  "name": "isISP",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 78,
                  "src": "36133:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "36133:18:0"
              }
            ],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 186,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 185,
                  "name": "countryName",
                  "nodeType": "VariableDeclaration",
                  "scope": 247,
                  "src": "36105:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 184,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "36105:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "36104:21:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 190,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "36152:0:0"
            },
            "scope": 339,
            "src": "36087:562:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 299,
              "nodeType": "Block",
              "src": "36746:320:0",
              "statements": [
                {
                  "assignments": [
                    259
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 259,
                      "name": "req",
                      "nodeType": "VariableDeclaration",
                      "scope": 300,
                      "src": "36752:28:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$893_memory_ptr",
                        "typeString": "struct Chainlink.Request"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 258,
                        "name": "Chainlink.Request",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 893,
                        "src": "36752:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$893_storage_ptr",
                          "typeString": "struct Chainlink.Request"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 269,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 262,
                            "name": "_jobId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 251,
                            "src": "36821:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 261,
                          "name": "stringToBytes32",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 338,
                          "src": "36805:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (string memory) pure returns (bytes32)"
                          }
                        },
                        "id": 263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "36805:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 264,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3587,
                        "src": "36830:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DonationsManager_$339",
                          "typeString": "contract DonationsManager"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 265,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3587,
                            "src": "36836:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DonationsManager_$339",
                              "typeString": "contract DonationsManager"
                            }
                          },
                          "id": 266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "fulfill",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 315,
                          "src": "36836:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
                            "typeString": "function (bytes32,uint256) external"
                          }
                        },
                        "id": 267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "36836:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_contract$_DonationsManager_$339",
                          "typeString": "contract DonationsManager"
                        },
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 260,
                      "name": "buildChainlinkRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1214,
                      "src": "36783:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_address_$_t_bytes4_$returns$_t_struct$_Request_$893_memory_ptr_$",
                        "typeString": "function (bytes32,address,bytes4) pure returns (struct Chainlink.Request memory)"
                      }
                    },
                    "id": 268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "36783:75:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$893_memory_ptr",
                      "typeString": "struct Chainlink.Request memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "36752:106:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "75726c",
                        "id": 273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "36880:5:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b68b5f5089998f2978a1dcc681e8ef27962b90d5c26c4c0b9c1945814ffa5ef0",
                          "typeString": "literal_string \"url\""
                        },
                        "value": "url"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "68747470733a2f2f6d696e2d6170692e63727970746f636f6d706172652e636f6d2f646174612f70726963653f6673796d3d455448267473796d733d555344",
                        "id": 274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "36887:65:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_444739292f65e0d84586af555ca805e0303948242aa5bbf9a7032603676a8ec3",
                          "typeString": "literal_string \"https://min-api.cryptocompare.com/data/price?fsym=ETH&tsyms=USD\""
                        },
                        "value": "https://min-api.cryptocompare.com/data/price?fsym=ETH&tsyms=USD"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_b68b5f5089998f2978a1dcc681e8ef27962b90d5c26c4c0b9c1945814ffa5ef0",
                          "typeString": "literal_string \"url\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_444739292f65e0d84586af555ca805e0303948242aa5bbf9a7032603676a8ec3",
                          "typeString": "literal_string \"https://min-api.cryptocompare.com/data/price?fsym=ETH&tsyms=USD\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 270,
                        "name": "req",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 259,
                        "src": "36872:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$893_memory_ptr",
                          "typeString": "struct Chainlink.Request memory"
                        }
                      },
                      "id": 272,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 986,
                      "src": "36872:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Request_$893_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_Request_$893_memory_ptr_$",
                        "typeString": "function (struct Chainlink.Request memory,string memory,string memory) pure"
                      }
                    },
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "36872:81:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 276,
                  "nodeType": "ExpressionStatement",
                  "src": "36872:81:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "70617468",
                        "id": 280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "36967:6:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_46f9db2921f88204395f1f47d741736216b2218e88e47f50e1f1b56261f0d0cd",
                          "typeString": "literal_string \"path\""
                        },
                        "value": "path"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "555344",
                        "id": 281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "36975:5:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c4ae21aac0c6549d71dd96035b7e0bdb6c79ebdba8891b666115bc976d16a29e",
                          "typeString": "literal_string \"USD\""
                        },
                        "value": "USD"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_46f9db2921f88204395f1f47d741736216b2218e88e47f50e1f1b56261f0d0cd",
                          "typeString": "literal_string \"path\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c4ae21aac0c6549d71dd96035b7e0bdb6c79ebdba8891b666115bc976d16a29e",
                          "typeString": "literal_string \"USD\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 277,
                        "name": "req",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 259,
                        "src": "36959:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$893_memory_ptr",
                          "typeString": "struct Chainlink.Request memory"
                        }
                      },
                      "id": 279,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 986,
                      "src": "36959:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Request_$893_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_Request_$893_memory_ptr_$",
                        "typeString": "function (struct Chainlink.Request memory,string memory,string memory) pure"
                      }
                    },
                    "id": 282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "36959:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 283,
                  "nodeType": "ExpressionStatement",
                  "src": "36959:22:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "74696d6573",
                        "id": 287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "36998:7:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0bfab8028df7ddaceaf0a173b093c1269c5dd964bbe8cc0c6b210e554970802b",
                          "typeString": "literal_string \"times\""
                        },
                        "value": "times"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "313030",
                        "id": 288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "37007:3:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_0bfab8028df7ddaceaf0a173b093c1269c5dd964bbe8cc0c6b210e554970802b",
                          "typeString": "literal_string \"times\""
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 284,
                        "name": "req",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 259,
                        "src": "36987:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$893_memory_ptr",
                          "typeString": "struct Chainlink.Request memory"
                        }
                      },
                      "id": 286,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addInt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1038,
                      "src": "36987:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Request_$893_memory_ptr_$_t_string_memory_ptr_$_t_int256_$returns$__$bound_to$_t_struct$_Request_$893_memory_ptr_$",
                        "typeString": "function (struct Chainlink.Request memory,string memory,int256) pure"
                      }
                    },
                    "id": 289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "36987:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 290,
                  "nodeType": "ExpressionStatement",
                  "src": "36987:24:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 292,
                        "name": "_oracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 249,
                        "src": "37040:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 293,
                        "name": "req",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 259,
                        "src": "37049:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$893_memory_ptr",
                          "typeString": "struct Chainlink.Request memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "37054:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 295,
                          "name": "LINK",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1141,
                          "src": "37056:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "37054:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_Request_$893_memory_ptr",
                          "typeString": "struct Chainlink.Request memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 291,
                      "name": "sendChainlinkRequestTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1286,
                      "src": "37017:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_Request_$893_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (address,struct Chainlink.Request memory,uint256) returns (bytes32)"
                      }
                    },
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "37017:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 298,
                  "nodeType": "ExpressionStatement",
                  "src": "37017:44:0"
                }
              ]
            },
            "documentation": null,
            "id": 300,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 254,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 253,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 90,
                  "src": "36734:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "36734:9:0"
              }
            ],
            "name": "requestEthereumPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 249,
                  "name": "_oracle",
                  "nodeType": "VariableDeclaration",
                  "scope": 300,
                  "src": "36687:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 248,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "36687:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 251,
                  "name": "_jobId",
                  "nodeType": "VariableDeclaration",
                  "scope": 300,
                  "src": "36704:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 250,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "36704:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "36686:32:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 255,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "36746:0:0"
            },
            "scope": 339,
            "src": "36657:409:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 314,
              "nodeType": "Block",
              "src": "37188:81:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 310,
                      "name": "currentPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "37194:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 311,
                      "name": "_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 304,
                      "src": "37209:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "37194:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 313,
                  "nodeType": "ExpressionStatement",
                  "src": "37194:21:0"
                }
              ]
            },
            "documentation": null,
            "id": 315,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 307,
                    "name": "_requestId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 302,
                    "src": "37174:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 308,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 306,
                  "name": "recordChainlinkFulfillment",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1537,
                  "src": "37147:26:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "37147:38:0"
              }
            ],
            "name": "fulfill",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 305,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 302,
                  "name": "_requestId",
                  "nodeType": "VariableDeclaration",
                  "scope": 315,
                  "src": "37087:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 301,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "37087:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 304,
                  "name": "_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 315,
                  "src": "37107:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 303,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "37107:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "37086:36:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 309,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "37188:0:0"
            },
            "scope": 339,
            "src": "37070:199:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 337,
              "nodeType": "Block",
              "src": "37360:187:0",
              "statements": [
                {
                  "assignments": [
                    323
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 323,
                      "name": "tempEmptyStringTest",
                      "nodeType": "VariableDeclaration",
                      "scope": 338,
                      "src": "37366:32:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 322,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "37366:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 327,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 325,
                        "name": "source",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 317,
                        "src": "37407:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 324,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "37401:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                        "typeString": "type(bytes storage pointer)"
                      },
                      "typeName": "bytes"
                    },
                    "id": 326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "37401:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "37366:48:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 328,
                        "name": "tempEmptyStringTest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 323,
                        "src": "37424:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "37424:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 330,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "37454:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "37424:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 335,
                  "nodeType": "IfStatement",
                  "src": "37420:62:0",
                  "trueBody": {
                    "id": 334,
                    "nodeType": "Block",
                    "src": "37457:25:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "307830",
                          "id": 332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "37472:3:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x0"
                        },
                        "functionReturnParameters": 321,
                        "id": 333,
                        "nodeType": "Return",
                        "src": "37465:10:0"
                      }
                    ]
                  }
                },
                {
                  "externalReferences": [
                    {
                      "source": {
                        "declaration": 317,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "37525:6:0",
                        "valueSize": 1
                      }
                    },
                    {
                      "result": {
                        "declaration": 320,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "37505:6:0",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 336,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    result := mload(add(source, 32))\n}",
                  "src": "37488:59:0"
                }
              ]
            },
            "documentation": null,
            "id": 338,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "stringToBytes32",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 318,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 317,
                  "name": "source",
                  "nodeType": "VariableDeclaration",
                  "scope": 338,
                  "src": "37300:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 316,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "37300:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "37299:22:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 321,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 320,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 338,
                  "src": "37344:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 319,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "37344:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "37343:16:0"
            },
            "scope": 339,
            "src": "37275:272:0",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "private"
          }
        ],
        "scope": 340,
        "src": "34359:3192:0"
      }
    ],
    "src": "34211:3341:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.9",
  "updatedAt": "2019-05-19T03:39:47.611Z",
  "devdoc": {
    "methods": {
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "_newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}